Group {
 inputs 2
 name Depth_Mask
 help "Depth Mask\n\nCreate a mask using the render of the Depth pass. \nIt will have a shape of a circle or a cube.\n"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\ninputT = nuke.exists(\"Alpha\") \n\nif knob.name() in ('matte', 'showPanel'):\n    mode = node\['matte'].value()\n    if mode == 'Depth Input':\n        if str(inputT)==\"True\":\n             n = nuke.toNode('Alpha')\n             nuke.delete(n)\n\n    elif mode == 'Alpha (New Input)':\n        if str(inputT)==\"False\":\n            nuke.message(\"Add New Input in Node\")\n            i = nuke.createNode('Input', inpanel=False )\n            i\['name'].setValue('Alpha')\n            n = nuke.toNode('Switch2')\n            n.setInput(0,i)"
 tile_color 0x6d6d6dff
 selected true
 addUserKnob {20 DMS l "Depth Mask"}
 addUserKnob {41 depth l "Z Depth" T DepthToPosition1.depth}
 addUserKnob {6 premult l "(Un)Premult by     -->  " t "The Depth Pass is divide by the Alpha channel before being processed, and multiplied again afterwards. This can improve the texturing of anti-aliased edges." +STARTLINE}
 premult true
 addUserKnob {4 matte l " Alpha from " t "Choose the Alpha channel.\nAlpha is usefull for a better result with clean edge (UnPremult / Premult).\n\nDepth Input: \nAutomatic pick the .a from the Input.\n\nAlpha (New Input):\nPick the .a from an other Input." -STARTLINE M {"Depth Input" "Alpha (New Input)" ""}}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {41 center_1 l Center t "Pick a value. \nIt will be the center of the sphere." T Sphere.center}
 addUserKnob {4 volume l Shape M {Sphere Cube}}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {26 ""}
 addUserKnob {20 Transform l "Transform " n 1}
 addUserKnob {26 S05 l " " T " "}
 addUserKnob {13 offset l Translate}
 addUserKnob {13 rotate l Rotate}
 addUserKnob {13 scalediv l Scale}
 scalediv {1 1 1}
 addUserKnob {26 S06 l " " T " "}
 addUserKnob {7 uni_scale l "Uniform Scale" R 0 100}
 uni_scale 20
 addUserKnob {26 S04 l " "}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 S03 l " " T " "}
 addUserKnob {20 Falloff n 1}
 addUserKnob {7 radius l Out t "Adjust feather." R 0 100}
 radius 20
 addUserKnob {7 inner_radius l In t "Adjust inner scale." R 0 100}
 addUserKnob {4 falloff l Type t "Falloff profile of the feathered edge." M {Linear Smoothstep Cubic "Inverse Cubic" "" "" "" "" "" "" ""}}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {7 opacity l Opacity}
 opacity 1
 addUserKnob {26 by1 l " " T " "}
 addUserKnob {26 by2 l " " T "                                                                                               "}
 addUserKnob {26 CGEV l " " t "\nEn cas de probleme, contacter Gaetan Baldy sur le chat\n" -STARTLINE T "<font color=\"#1C1C1C\"> v02 - CGEV - 2016"}
}
 Input {
  inputs 0
  name ZDepth
  xpos -742
  ypos -1251
 }
 Dot {
  name Dot9
  xpos -708
  ypos -1174
 }
set Ne784b800 [stack 0]
push 0
 Switch {
  inputs 2
  which {{!matte i}}
  name Switch2
  xpos -1001
  ypos -1177
 }
 NoOp {
  name AlphaCheck
  xpos -1001
  ypos -1055
  addUserKnob {20 User}
  addUserKnob {6 alpha +STARTLINE}
  alpha {{"\[python \"len(\\\[n for n in nuke.channels(nuke.thisNode().input(0)) if n.find(\\\".a\\\") != -1])>0\"]" i}}
 }
 AddChannels {
  channels rgba
  name AddAlpha
  xpos -1001
  ypos -1031
 }
 Dot {
  name Dot11
  xpos -967
  ypos -949
 }
set Ne784ac00 [stack 0]
 Dot {
  name Dot12
  xpos -967
  ypos 56
 }
 Input {
  inputs 0
  name Cam
  xpos -465
  ypos -1262
  number 1
 }
 Dot {
  name Dot1
  xpos -431
  ypos -727
 }
push $Ne784ac00
push $Ne784b800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -742
  ypos -958
 }
set N5f741c00 [stack 0]
 Unpremult {
  channels all
  name Unpremult2
  xpos -852
  ypos -884
  disable {{!AlphaCheck.alpha}}
 }
push $N5f741c00
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch9
  xpos -742
  ypos -826
 }
 DepthToPosition {
  inputs 2
  output rgba
  name DepthToPosition1
  xpos -741
  ypos -731
 }
 Multiply {
  value 100
  name Multiply1
  xpos -742
  ypos -705
 }
 Dot {
  name Dot5
  xpos -708
  ypos -607
 }
set N5f740c00 [stack 0]
 Expression {
  temp_name0 x
  temp_expr0 abs(normX.x*(center.r+parent.offset.x-r)+normX.y*(center.g+parent.offset.y-g)+normX.z*(center.b+parent.offset.z-b))
  temp_name1 y
  temp_expr1 abs(normY.x*(center.r+parent.offset.x-r)+normY.y*(center.g+parent.offset.y-g)+normY.z*(center.b+parent.offset.z-b))
  temp_name2 z
  temp_expr2 abs(normZ.x*(center.r+parent.offset.x-r)+normZ.y*(center.g+parent.offset.y-g)+normZ.z*(center.b+parent.offset.z-b))
  channel0 none
  channel1 none
  channel2 none
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 1-max(x/scale.x/parent.radius*2,y/scale.y/parent.radius*2,z/scale.z/parent.radius*2)/2
  name Cube
  xpos -681
  ypos -543
  cached true
  addUserKnob {20 User}
  addUserKnob {18 center l Center}
  center {{parent.Sphere.center} {parent.Sphere.center} {parent.Sphere.center}}
  addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 ""}
  addUserKnob {13 rad}
  rad {{radians(parent.rotate.x)} {radians(parent.rotate.y)} {radians(parent.rotate.z)}}
  addUserKnob {13 normX}
  normX {{cos(rad.z)*(cos(rad.y))} {sin(rad.z)*(cos(rad.y))} {-sin(rad.y)}}
  addUserKnob {13 normY}
  normY {{cos(rad.z)*(sin(rad.y)*(-sin(rad.x)))-sin(rad.z)*(cos(rad.x))} {sin(rad.z)*(sin(rad.y)*(-sin(rad.x)))-cos(rad.z)*(cos(rad.x))} {(cos(rad.y)*(-sin(rad.x)))}}
  addUserKnob {13 normZ}
  normZ {{cos(rad.z)*(sin(rad.y)*cos(rad.x))-sin(rad.z)*sin(rad.x)} {cos(rad.z)*(sin(rad.y)*cos(rad.x))+cos(rad.z)*sin(rad.x)} {cos(rad.y)*cos(rad.x)}}
  addUserKnob {26 ""}
  addUserKnob {13 scale}
  scale {{scalediv.x/10*parent.uni_scale} {scalediv.y/10*parent.uni_scale} {scalediv.z/10*parent.uni_scale}}
 }
push $N5f740c00
 Expression {
  temp_name0 x
  temp_expr0 abs(normX.x*(center.r+parent.offset.x-r)+normX.y*(center.g+parent.offset.y-g)+normX.z*(center.b+parent.offset.z-b))
  temp_name1 y
  temp_expr1 abs(normY.x*(center.r+parent.offset.x-r)+normY.y*(center.g+parent.offset.y-g)+normY.z*(center.b+parent.offset.z-b))
  temp_name2 z
  temp_expr2 abs(normZ.x*(center.r+parent.offset.x-r)+normZ.y*(center.g+parent.offset.y-g)+normZ.z*(center.b+parent.offset.z-b))
  channel0 none
  channel1 none
  channel2 none
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "r == 0 && g == 0 && b == 0?0:(scale.x != 1 || scale.y != 1 || scale.z != 1?1-(sqrt(pow2(x)/pow2(scale.x)+pow2(y)/pow2(scale.y)+pow2(z)/pow2(scale.z))/parent.radius):1-(sqrt(pow2(x)+pow2(y)+pow2(z))/parent.radius))"
  name Sphere
  xpos -790
  ypos -543
  cached true
  addUserKnob {20 User}
  addUserKnob {18 center l Center}
  center {0 0 0}
  addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 ""}
  addUserKnob {13 rad}
  rad {{radians(parent.rotate.x)} {radians(parent.rotate.y)} {radians(parent.rotate.z)}}
  addUserKnob {13 normX}
  normX {{cos(rad.z)*(cos(rad.y))} {sin(rad.z)*(cos(rad.y))} {-sin(rad.y)}}
  addUserKnob {13 normY}
  normY {{cos(rad.z)*(sin(rad.y)*(-sin(rad.x)))-sin(rad.z)*(cos(rad.x))} {sin(rad.z)*(sin(rad.y)*(-sin(rad.x)))-cos(rad.z)*(cos(rad.x))} {(cos(rad.y)*(-sin(rad.x)))}}
  addUserKnob {13 normZ}
  normZ {{cos(rad.z)*(sin(rad.y)*cos(rad.x))-sin(rad.z)*sin(rad.x)} {cos(rad.z)*(sin(rad.y)*cos(rad.x))+cos(rad.z)*sin(rad.x)} {cos(rad.y)*cos(rad.x)}}
  addUserKnob {26 ""}
  addUserKnob {13 scale}
  scale {{scalediv.x/10*parent.uni_scale} {scalediv.y/10*parent.uni_scale} {scalediv.z/10*parent.uni_scale}}
 }
 Switch {
  inputs 2
  which {{volume}}
  name Switch3
  xpos -742
  ypos -461
 }
 Grade {
  channels alpha
  whitepoint {{"1-(min(parent.inner_radius, parent.radius)*(1/parent.radius))"}}
  name inner_Radius
  label "\[if \{\[value reverse]==\"false\"\} \{return \"\[knob this.icon -]\"\} \{return \"\[knob this.icon Reverse]\"\}]\[value icon]"
  xpos -742
  ypos -370
  icon -
 }
 Dot {
  name Dot3
  xpos -708
  ypos -282
 }
set Nd67af400 [stack 0]
 Expression {
  expr3 a+(a-pow(a,2))
  name Inv_Cubic
  xpos -588
  ypos -203
 }
push $Nd67af400
 Expression {
  expr3 pow(a,2)
  name Cubic
  xpos -688
  ypos -204
 }
push $Nd67af400
 Expression {
  expr3 smoothstep(0,1,a)
  name Smoothstep
  xpos -793
  ypos -206
 }
push $Nd67af400
 Expression {
  name Linear
  xpos -903
  ypos -206
 }
 Switch {
  inputs 4
  which {{parent.falloff i}}
  name Switch1
  xpos -742
  ypos -104
 }
 Dot {
  name Dot2
  xpos -708
  ypos -26
 }
set Ne8187000 [stack 0]
 Multiply {
  inputs 1+1
  value 0
  invert_mask true
  name Multiply3
  xpos -857
  ypos 46
  disable {{!AlphaCheck.alpha i}}
 }
push $Ne8187000
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch10
  xpos -742
  ypos 134
 }
 Multiply {
  channels alpha
  value {{parent.opacity i}}
  name Multiply2
  xpos -742
  ypos 211
 }
 Clamp {
  channels alpha
  name Clamp1
  selected true
  xpos -742
  ypos 249
 }
 Output {
  name FranklinVFX
  xpos -742
  ypos 306
 }
end_group
