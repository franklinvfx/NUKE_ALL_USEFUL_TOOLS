Group {
 name VIEWER_INPUT
 onCreate "\n"
 knobChanged "if nuke.thisKnob().name() == 'selected':\n    if nuke.thisNode()\['created'].value() == False:\n        nuke.thisNode().setInput(0, None)\n        nuke.thisNode()\['hide_input'].setValue(True)\n        nuke.thisNode()\['created'].setValue(True)\n"
 tile_color 0xe7319b
 selected true
 addUserKnob {20 firsTab l "VIEWER INPUT"}
 addUserKnob {6 created l INVISIBLE +INVISIBLE +STARTLINE}
 addUserKnob {26 text_volet l "@b; Volet" T ""}
 addUserKnob {6 volet l "" -STARTLINE}
 volet true
 addUserKnob {20 volet_group l "" +STARTLINE n 1}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {7 aspect l "<font color=\"green\">@b;Aspect Ratio" R 1 4}
 aspect 2.39
 addUserKnob {7 opacity_volet l Opacity}
 opacity_volet 1
 addUserKnob {26 S03 l " " T " "}
 addUserKnob {3 edges_width l "Edges Width"}
 edges_width 4
 addUserKnob {7 opacity_edges l Opacity}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 text_mirror l "@b; Mirror" T ""}
 addUserKnob {6 mirror_solo l "" -STARTLINE}
 addUserKnob {20 mirror_group l " " n 1}
 mirror_group 0
 addUserKnob {41 Horizontal T Mirror1.Horizontal}
 addUserKnob {41 Vertical -STARTLINE T Mirror1.Vertical}
 addUserKnob {26 S06 l " " T " "}
 addUserKnob {20 endGroup_4 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 text_grade l "@b; Grade" T ""}
 addUserKnob {6 grade_solo l " " -STARTLINE}
 addUserKnob {20 color_group l " " n 1}
 color_group 0
 addUserKnob {41 channels l Channels T ColorCorrect2.channels}
 addUserKnob {26 S08 l " " T " "}
 addUserKnob {19 saturation_1 l Saturation R 0 4}
 saturation_1 2
 addUserKnob {6 saturation_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 contrast_1 l contrast R 0 4}
 contrast_1 1
 addUserKnob {6 contrast_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 gamma_1 l Gamma R 0.2 5}
 gamma_1 1
 addUserKnob {6 gamma_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 gain_1 l Gain R 0 4}
 gain_1 1
 addUserKnob {6 gain_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {19 offset_1 l Offset R -1 1}
 offset_1 {0 0 0 0}
 addUserKnob {6 offset_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 S07 l " " T " "}
 addUserKnob {20 endGroup n -1}
 addUserKnob {1 output l INVISIBLE +INVISIBLE}
 output "\[value aspect]"
 addUserKnob {26 FT2 l "                          " T " "}
 addUserKnob {26 FT3 l " " T "                                                                                               "}
 addUserKnob {26 FTools l " " t "FranklinVFX.com\n" -STARTLINE T "<font color=\"#1C1C1C\"> Franklin VFX - 2017"}
}
 Input {
  inputs 0
  name Input
  xpos 1823
  ypos 243
 }
 ColorCorrect {
  channels all
  saturation {{saturation_1}}
  contrast {{contrast_1}}
  gamma {{parent.gamma_1}}
  gain {{gain_1}}
  offset {{offset_1}}
  name ColorCorrect2
  xpos 1823
  ypos 321
  disable {{!grade_solo x1030 0}}
 }
 Mirror {
  Horizontal true
  name Mirror1
  xpos 1823
  ypos 404
  disable {{!parent.mirror_solo}}
 }
 Group {
  name Volet
  help "Volet\n\nAdd Letterbox Bar on the input image.\n"
  knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() in ('ar_selection', 'showPanel'):\n    mode = node\['ar_selection'].value()\n    if mode == 'Custom':\n        node\['ar_custom'].setVisible(True)\n    elif mode != 'Custom':\n        node\['ar_custom'].setVisible(False)"
  xpos 1823
  ypos 496
  icon F_noicon.png
  disable {{!volet}}
  addUserKnob {20 Franklin l Volet t "\nFor any questions or request contact me through my website: \nFranklinvfx.com\n\nThanks to all the Nukepedia community...\n"}
  addUserKnob {26 S01 l "@b;  Letterbox Bar" T " "}
  addUserKnob {4 ar_selection l "       Aspect Ratio" M {"Choose   " 1.00 1.19 1.25 1.33 1.35 1.37 1.43 1.50 1.56 1.60 1.66 1.75 1.778 1.85 2.00 2.20 2.35 2.40 2.55 2.59 2.76 4.00 Custom "" "" "" "" "" "" ""}}
  ar_selection Custom
  addUserKnob {7 ar_custom l "" -STARTLINE R 0 4}
  ar_custom {{parent.aspect}}
  addUserKnob {41 mix l Opacity t "Change the opacity of the Letterbox Bar." T Dissolve1.which}
  addUserKnob {26 S03 l "@b; Edges"}
  addUserKnob {3 line l Width t "Change the thickness (value in pixel) of the Letterbox Bar edges."}
  line {{edges_width}}
  addUserKnob {41 mix_2 l Opacity t "Change the opacity of the Letterbox Bar Edges." T Merge1.mix}
  addUserKnob {1 name1 l INVISIBLE +INVISIBLE}
  name1 "\[if \{\[value ar_selection]==\"Custom\"\} \{return \"\[value ar_custom]\"\} \{return \"\[value ar_selection]\"\}]"
  addUserKnob {1 output l INVISIBLE +INVISIBLE}
  output "\[regsub -all \"Choose\" \[value name1] \"\"] "
  addUserKnob {26 by2 l " " T "                                                                                               "}
  addUserKnob {26 FranklinVFX l " " t "\nFor any questions or request contact me through my website: \nFranklinvfx.com\n\nThanks to all the Nukepedia community...\n" -STARTLINE T "<font color=\"#1C1C1C\"> v02 - CGEV - 2016"}
 }
  Input {
   inputs 0
   name Input
   xpos 257
   ypos 443
  }
  Dot {
   name Dot2
   xpos 291
   ypos 582
  }
set N88d32000 [stack 0]
  Dot {
   name Dot1
   xpos 168
   ypos 582
  }
  Dot {
   name Dot3
   xpos 168
   ypos 918
  }
push $N88d32000
  Group {
   name Crop_Plus2
   help "@b; dCrop v2@n; for Nuke 6.0v3\n\nProvides options to crop a input by box, percentage, bbox or a aspect ratio relative to the input.\n\nCreated by Diogo Girondi\ndiogogirondi@gmail.com"
   knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() in ('mode', 'showPanel'):\n    mode = n\['mode'].value()\n    n\['text'].setVisible(False)\n    if mode == 'Custom Box':\n        n\['cbox'].setVisible(True)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n    elif mode == 'BBox':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(True)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n    elif mode == 'Percentage':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(True)\n        n\['right'].setVisible(True)\n        n\['bottom'].setVisible(True)\n        n\['top'].setVisible(True)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n    elif mode == 'Aspect Ratio':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(True)\n        if n\['ar_selection'].value() == 'Custom':\n            n\['ar_custom'].setVisible(True)\n        else:\n            n\['ar_custom'].setVisible(False)\n        if n\['ar_selection'].value() == 'Input       ':\n            n\['offset'].setEnabled(False)\n        else:\n            n\['offset'].setEnabled(True)\n        n\['offset'].setVisible(True)\n    elif mode == 'Input':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['text'].setVisible(True)\n\nif k.name() in ('ar_selection', 'showPanel'):\n    aspect = n\['ar_selection'].value()\n    if aspect == 'Custom':\n        n\['ar_custom'].setVisible(True)\n    else:\n        n\['ar_custom'].setVisible(False)\n    if aspect == 'Input       ':\n        n\['offset'].setEnabled(False)\n    else:\n        n\['offset'].setEnabled(True)\n\nif k.name() == 'reformat':\n    reformat = n\['reformat'].value()\n    if reformat == True:\n        n\['crop'].setValue(False)\n    else:\n        n\['crop'].setValue(True)"
   tile_color 0xa57aaaff
   xpos 381
   ypos 579
   addUserKnob {20 dcrop l Crop}
   addUserKnob {4 ar_selection l Aspect M {"Input       " 1.00 1.19 1.25 1.33 1.35 1.37 1.43 1.50 1.56 1.60 1.66 1.75 1.778 1.85 2.00 2.20 2.35 2.40 2.55 2.59 2.76 4.00 Custom ""}}
   ar_selection {{parent.ar_selection x1 1}}
   addUserKnob {7 ar_custom l " " -STARTLINE +HIDDEN R 0 4}
   ar_custom {{parent.ar_custom}}
   addUserKnob {7 offset l Offset R -100 100}
  }
   Input {
    inputs 0
    name Input
    xpos 81
    ypos 139
   }
   NoOp {
    name Aspect
    tile_color 0xffffffff
    gl_color 0xff005fff
    label Math
    xpos 81
    ypos 189
    addUserKnob {20 ar_math l "Aspect Ratio Math"}
    addUserKnob {7 input_ar R 0 4}
    input_ar {{(input.width*input.pixel_aspect)/input.height}}
    addUserKnob {7 custom_ar R 0 4}
    custom_ar {{"parent.ar_selection==0?this.input_ar:parent.ar_selection==23?parent.ar_custom:\[value ar_selection]"}}
    addUserKnob {6 ar_isBigger +STARTLINE}
    ar_isBigger {{this.input_ar>=this.custom_ar}}
    addUserKnob {26 ""}
    addUserKnob {12 ar_area}
    ar_area {{ar_isBigger?((input.height*this.custom_ar)/input.pixel_aspect):input.width} {ar_isBigger?input.height:((input.width*input.pixel_aspect)/this.custom_ar)}}
    addUserKnob {12 ar_pos}
    ar_pos {{((input.width-this.ar_area.x)/2)*(parent.offset/100)} {((input.height-this.ar_area.y)/2)*(parent.offset/100)}}
    addUserKnob {15 ar}
    ar {{ar_isBigger?this.ar_pos.x+((input.width/2)-(((input.height*this.custom_ar)/input.pixel_aspect)/2)):0} {ar_isBigger?0:this.ar_pos.y+((input.height/2)-(((input.width*input.pixel_aspect)/this.custom_ar)/2))} {ar_isBigger?this.ar_pos.x+((input.width/2)+(((input.height*this.custom_ar)/input.pixel_aspect)/2)):input.width} {ar_isBigger?input.height:this.ar_pos.y+((input.height/2)+(((input.width*input.pixel_aspect)/this.custom_ar)/2))}}
   }
   Crop {
    box {{parent.Aspect.ar.main} {parent.Aspect.ar.main} {parent.Aspect.ar.main} {parent.Aspect.ar.main}}
    name AspectRatio
    tile_color 0xffffffff
    label Crop
    selected true
    xpos 81
    ypos 246
   }
   Output {
    name Output1
    xpos 81
    ypos 304
   }
  end_group
set N72374400 [stack 0]
  Shuffle {
   red white
   green white
   blue white
   alpha white
   name Shuffle1
   label (Alpha)
   xpos 381
   ypos 675
  }
set N85692400 [stack 0]
  Crop {
   box {{input.bbox.x+1} {input.bbox.y+1} {input.bbox.r-1} {input.bbox.t-1}}
   name Box
   label Crop
   xpos 381
   ypos 747
  }
push $N85692400
  Crop {
   box {{Box.box.x} {Box.box.y-edge} {Box.box.r} {Box.box.t+edge}}
   name Crop1
   selected true
   xpos 507
   ypos 753
   addUserKnob {20 User}
   addUserKnob {7 edge R 0 10}
   edge {{line}}
  }
  Multiply {
   inputs 1+1
   value 0
   name Multiply1
   xpos 381
   ypos 821
  }
push $N72374400
push $N88d32000
  Dissolve {
   inputs 2
   which {{opacity_volet}}
   name Dissolve1
   xpos 257
   ypos 745
  }
  Merge2 {
   inputs 2
   mix {{opacity_edges}}
   name Merge1
   xpos 257
   ypos 827
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 257
   ypos 915
  }
  Output {
   name FranklinVFX
   xpos 257
   ypos 983
  }
 end_group
 Output {
  name FranklinVFX
  xpos 1823
  ypos 579
 }
end_group
