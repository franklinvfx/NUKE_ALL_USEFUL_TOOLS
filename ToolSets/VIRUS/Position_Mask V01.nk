set cut_paste_input [stack 0]
version 10.5 v5
push $cut_paste_input
Group {
 name Position_Mask7
 help "Position Mask Sphere\n\nCreate a mask using the render of the Position pass. \nIt will have a shape of a circle becouse a sphere is use to create it.\n"
 onCreate "#--------------------------------------\nnuke.thisNode().knob('lock_connections').setValue(True)\nnuke.thisNode().knob('lock_connections').setEnabled(False)"
 knobChanged "thisNode = nuke.thisNode()\n\nif nuke.thisKnob().name() == '_Picker':\n\txPos, yPos =  nuke.thisNode().knob('_Picker').value()\n\twith nuke.thisNode():\n\t\tnode = nuke.toNode('Shuffle_input_channel')\n\t\tr = node.sample('red', xPos, yPos)\n\t\tg = node.sample('green', xPos, yPos)\n\t\tb = node.sample('blue', xPos, yPos)\n\n\t\tnode = nuke.toNode('Sphere')\n\t\tnode.knob('center').setValue(\[r,g,b]) \n\nif nuke.thisKnob().name() in ('matte', 'showPanel'):\n\tinputT = nuke.exists('Alpha')\n\tmode = nuke.thisNode()\['matte'].value()\n\tif mode == 'Position Input':\n\t\tif str(inputT)== 'True':\n\t\t\tn = nuke.toNode('Alpha')\n\t\t\tnuke.delete(n)\n\telif mode == 'Alpha (New Input)':\n\t\tif str(inputT)== 'False':\n\t\t\tnuke.message('Add New Input in Node')\n\t\t\ti = nuke.createNode('Input', inpanel=False )\n\t\t\ti\['name'].setValue('Alpha')\n\t\t\tn = nuke.toNode('Switch2')\n\t\t\tn.setInput(0,i)\n\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() in ('visualise', 'showPanel'):\n    mode = node\['visualise'].value()\n    if mode == 'None':\n        node\['point_detail'].setVisible(False)\n        node\['point_size'].setVisible(False)\n    else:\n        node\['point_detail'].setVisible(True)\n        node\['point_size'].setVisible(True)\n\n#------------------------------------------------\n#nuke.thisNode().knob('lock_connections').setEnabled(True)\n#nuke.thisNode().knob('lock_connections').setValue(False)\n\nif nuke.thisKnob().name() == '_Picker':\n    with thisNode:\n        node = nuke.toNode('MergeFTVFX')\n        if node:\n            pass\n        else:\n            t = nuke.createNode('Text2', inpanel=False )\n            t\['name'].setValue('TextFTVFX')\n            t\['message'].setValue('FranklinVFX.com')\n            t\['message'].setVisible(False)\n            t\['font'].setValue(\"Arial\", \"Regular\")\n            t\['xjustify'].setValue(\"center\")\n            t\['yjustify'].setValue(\"center\")\n            t\['cliptype'].setValue(\"no clip\")\n            t\['replace'].setValue(True)\n            \n            r = nuke.createNode('Transform', inpanel=False )\n            r\['name'].setValue('TransformFTVFX')\n            r\['rotate'].setValue(45)\n            r\['center'].setValue(0)\n            r\['translate'].setValue(300)\n            \n            s = nuke.createNode('STMap', inpanel=False )\n            s\['name'].setValue('STMapFTVFX')\n            s\['channels'].setValue('rgba')\n            s\['uv'].setValue('rgb')\n            \n            e = nuke.createNode('Expression', inpanel=False )\n            e\['name'].setValue('ExpFTVFX')\n            e\['expr0'].setValue('((x-offset.x)<0?1+((x-offset.x)/width*3)-int((x-offset.x)/width*3):((x-offset.x)/width*3)-int((x-offset.x)/width*3))')\n            e\['expr1'].setValue('((y-offset.y)<0?1+((y-offset.y)/height*3)-int((y-offset.y)/height*3):((y-offset.y)/height*3)-int((y-offset.y)/height*3))')\n            \n            m = nuke.createNode('Merge', inpanel=False )\n            m\['name'].setValue('MergeFTVFX')\n            m\['operation'].setValue('over')\n            m\['disable'].setExpression('\$gui')\n            \n            cname = nuke.toNode('CopytoRight')\n            mname2 = nuke.toNode('MergefromRight')\n            \n            tname = nuke.toNode('TextFTVFX')\n            rname = nuke.toNode('TransformFTVFX')\n            sname = nuke.toNode('STMapFTVFX')\n            ename = nuke.toNode('ExpFTVFX')\n            mname = nuke.toNode('MergeFTVFX')\n            \n            tname.setInput(0,cname)\n            rname.setInput(0,tname)\n            ename.setInput(0,cname)\n            sname.setInput(0,rname)\n            sname.setInput(1,ename)\n            mname.setInput(0,cname)\n            mname.setInput(1,sname)\n            mname2.setInput(0,mname)\n            \n            \n            "
 tile_color 0xdda92aff
 selected true
 xpos -222
 ypos -828
 lock_connections true
 addUserKnob {20 PMS l "Position Mask"}
 addUserKnob {41 in l "Position Channel" t "Choose the position pass channel." T Shuffle_input_channel.in}
 addUserKnob {6 premult l "(Un)Premult by     -->  " t "The Position Pass is divide by the Alpha channel before being processed, and multiplied again afterwards. This can improve the texturing of anti-aliased edges." +STARTLINE}
 premult true
 addUserKnob {4 matte l " Alpha from " t "Choose the Alpha channel.\nAlpha is usefull for a better result with clean edge (UnPremult / Premult).\n\nPosition Input: \nAutomatic pick the .a from the Input.\n\nAlpha (New Input):\nPick the .a from an other Input." -STARTLINE M {"Position Input" "Alpha (New Input)" ""}}
 addUserKnob {26 ""}
 addUserKnob {12 _Picker l Position t "Set a position.\nIt will be the center of the 3D mask."}
 _Picker {1511 975}
 addUserKnob {6 overlay l "Overlay      Color:" -STARTLINE}
 overlay true
 addUserKnob {6 r l "R  " -STARTLINE}
 r true
 addUserKnob {6 g l "G  " -STARTLINE}
 addUserKnob {6 b l B -STARTLINE}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {41 center_1 l INVISIBLE t "Pick a value. \nIt will be the center of the sphere." +INVISIBLE T Sphere.center}
 addUserKnob {26 ""}
 addUserKnob {4 shape l Shape M {Sphere Cube}}
 addUserKnob {4 falloff l "             Falloff" t "Falloff profile of the feathered edge." -STARTLINE M {Linear Smoothstep Cubic "Inverse Cubic" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {26 S06 l " "}
 addUserKnob {7 uni_scale l "<font color=\"white\">Global <font color=\"grey\">Scale" R 0 100}
 uni_scale 0.1
 addUserKnob {7 radius l "<font color=\"white\">Out<font color=\"grey\"> Scale" t "Adjust feather." R 0 100}
 radius 10
 addUserKnob {7 inner_radius l "<font color=\"white\">In <font color=\"grey\">Scale" t "Adjust inner scale." R 0 100}
 inner_radius 8
 addUserKnob {26 S05 l " " T " "}
 addUserKnob {13 offset l Translate}
 addUserKnob {13 rotate l Rotate}
 addUserKnob {13 scalediv l Scale}
 scalediv {1 1 1}
 addUserKnob {26 S03 l " " T " "}
 addUserKnob {26 ""}
 addUserKnob {4 visualise l "Visualize in 3D" t "Build Sphere and Point Cloud in 3D Space." M {None Active "" "" "" ""}}
 addUserKnob {7 point_detail l "Point Detail" +HIDDEN}
 point_detail 1
 addUserKnob {7 point_size l "Point Size" +HIDDEN R 0 10}
 point_size 4
 addUserKnob {26 ""}
 addUserKnob {7 opacity l Opacity}
 opacity 1
 addUserKnob {1 output l INVISIBLE +INVISIBLE}
 output "\[if \{\[value visualise]!=\"None\"\} \{return \"\[knob this.tile_color 0xa30000ff]\"\}  \{return \"\[knob this.tile_color 0xdda92aff]\"\}]\[value shape]"
 addUserKnob {26 by1 l " " T " "}
 addUserKnob {26 by2 l " " T "                                                                                               "}
 addUserKnob {26 CGEV l " " t "\nEn cas de probleme, contacter Gaetan Baldy sur le chat\n" -STARTLINE T "<font color=\"#1C1C1C\"> v04 - CGEV - 2016"}
}
 Input {
  inputs 0
  name Position
  xpos -889
  ypos -1005
 }
 Dot {
  name Dot9
  xpos -855
  ypos -854
 }
set N6fc2f800 [stack 0]
push 0
 Switch {
  inputs 2
  which {{!matte i}}
  name Switch2
  xpos -1235
  ypos -858
 }
 NoOp {
  name AlphaCheck
  xpos -1235
  ypos -803
  addUserKnob {20 User}
  addUserKnob {6 alpha +STARTLINE}
  alpha {{"\[python \"len(\\\[n for n in nuke.channels(nuke.thisNode().input(0)) if n.find(\\\".a\\\") != -1])>0\"]" i}}
 }
 AddChannels {
  channels rgba
  name AddAlpha
  xpos -1235
  ypos -779
 }
 Dot {
  name Dot11
  xpos -1201
  ypos -697
 }
set N6fc2ec00 [stack 0]
 Dot {
  name Dot12
  xpos -1201
  ypos 814
 }
push $N6fc2ec00
push $N6fc2f800
 Dot {
  name Dot1
  xpos -561
  ypos -856
 }
set N6fc2e400 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -594
  ypos -708
 }
set N6fc2e000 [stack 0]
 Unpremult {
  name Unpremult1
  xpos -489
  ypos -609
  disable {{!AlphaCheck.alpha i}}
 }
push $N6fc2e000
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch5
  xpos -594
  ypos -517
 }
 Dot {
  name Dot5
  xpos -560
  ypos 54
 }
set N9d905800 [stack 0]
 Dot {
  name pydot
  xpos -424
  ypos 54
 }
 Dot {
  name Dot7
  xpos -424
  ypos 723
 }
push $N6fc2e400
 Shuffle {
  name Shuffle1
  xpos -368
  ypos -860
  disable {{!parent.visualise}}
 }
push $N6fc2ec00
push $N6fc2f800
 Shuffle {
  name Shuffle_input_channel
  xpos -889
  ypos -784
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -889
  ypos -705
 }
set N9d904400 [stack 0]
 Unpremult {
  name Unpremult2
  xpos -1001
  ypos -600
  disable {{!AlphaCheck.alpha i}}
 }
push $N9d904400
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch9
  xpos -889
  ypos -513
 }
 Dot {
  name Dot8
  xpos -855
  ypos -439
 }
set N724a7c00 [stack 0]
 PositionToPoints {
  inputs 2
  display textured
  selectable false
  render_mode textured
  cast_shadow false
  receive_shadow false
  detail {{point_detail}}
  pointSize {{point_size}}
  name PositionToPoints1
  xpos -368
  ypos -443
  disable {{!parent.visualise}}
 }
 Dot {
  name Dot10
  xpos -334
  ypos -231
 }
 Constant {
  inputs 0
  color {0 0 1 0.5}
  name Constant1
  xpos 177
  ypos -531
  disable {{!parent.visualise}}
  postage_stamp false
 }
set N724a7000 [stack 0]
 Cube {
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  rows 1
  columns 1
  separate_faces false
  cube {-1 -1 -1 1 1 1}
  translate {{parent.Cube1.translate} {parent.Cube1.translate} {parent.Cube1.translate}}
  rotate {{parent.rotate.x} {parent.rotate.y} {parent.rotate.z}}
  scaling {{Sphere.scale.x} {Sphere.scale.y} {Sphere.scale.z}}
  uniform_scale {{"parent.radius > parent.inner_radius ? parent.inner_radius:parent.radius"}}
  name Cube2
  xpos 177
  ypos -505
  disable {{!parent.visualise}}
 }
 Constant {
  inputs 0
  color {1 0 0 0.5}
  name Constant2
  xpos -197
  ypos -527
  disable {{!parent.visualise}}
  postage_stamp false
 }
set N724a6800 [stack 0]
 Cube {
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  rows 1
  columns 1
  separate_faces false
  cube {-1 -1 -1 1 1 1}
  translate {{Sphere.center.r+parent.offset.x} {Sphere.center.g+parent.offset.y} {Sphere.center.b+parent.offset.z}}
  rotate {{parent.rotate.x} {parent.rotate.y} {parent.rotate.z}}
  scaling {{Sphere.scale.x} {Sphere.scale.y} {Sphere.scale.z}}
  uniform_scale {{parent.radius}}
  name Cube1
  xpos -71
  ypos -501
  disable {{!parent.visualise}}
 }
 Scene {
  inputs 2
  render_mode off
  name Scene3
  xpos 187
  ypos -406
  disable {{!parent.visualise}}
 }
push $N724a6800
 Sphere {
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  rows 20
  columns 20
  radius {{parent.radius}}
  translate {{Sphere.center.r+parent.offset.x} {Sphere.center.g+parent.offset.y} {Sphere.center.b+parent.offset.z}}
  rotate {{parent.rotate.x} {parent.rotate.y} {parent.rotate.z}}
  scaling {{Sphere.scale.x} {Sphere.scale.y} {Sphere.scale.z}}
  name Sphere2
  xpos -197
  ypos -501
  disable {{!parent.visualise}}
 }
push $N724a7000
 Sphere {
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  radius {{"parent.radius > parent.inner_radius ? parent.inner_radius:parent.radius"}}
  translate {{Sphere.center.r+parent.offset.x} {Sphere.center.g+parent.offset.y} {Sphere.center.b+parent.offset.z}}
  rotate {{parent.rotate.x} {parent.rotate.y} {parent.rotate.z}}
  scaling {{Sphere.scale.x} {Sphere.scale.y} {Sphere.scale.z}}
  name Sphere1
  xpos 54
  ypos -504
  disable {{!parent.visualise}}
 }
 Scene {
  inputs 2
  selectable false
  name Scene2
  xpos -187
  ypos -406
  disable {{!parent.visualise}}
 }
 Switch {
  inputs 2
  which {{shape}}
  name Switch4
  xpos -7
  ypos -386
 }
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos 3
  ypos -255
  disable {{!parent.visualise}}
 }
push $N724a7c00
 Expression {
  temp_name0 x
  temp_expr0 abs(normX.x*(center.r+parent.offset.x-r)+normX.y*(center.g+parent.offset.y-g)+normX.z*(center.b+parent.offset.z-b))
  temp_name1 y
  temp_expr1 abs(normY.x*(center.r+parent.offset.x-r)+normY.y*(center.g+parent.offset.y-g)+normY.z*(center.b+parent.offset.z-b))
  temp_name2 z
  temp_expr2 abs(normZ.x*(center.r+parent.offset.x-r)+normZ.y*(center.g+parent.offset.y-g)+normZ.z*(center.b+parent.offset.z-b))
  channel0 none
  channel1 none
  channel2 none
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 1-max(x/scale.x/parent.radius*2,y/scale.y/parent.radius*2,z/scale.z/parent.radius*2)/2
  name Cube
  xpos -841
  ypos -349
  cached true
  addUserKnob {20 User}
  addUserKnob {18 center l Center}
  center {{parent.Sphere.center} {parent.Sphere.center} {parent.Sphere.center}}
  addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 ""}
  addUserKnob {13 rad}
  rad {{radians(parent.rotate.x)} {radians(parent.rotate.y)} {radians(parent.rotate.z)}}
  addUserKnob {13 normX}
  normX {{cos(rad.z)*(cos(rad.y))} {sin(rad.z)*(cos(rad.y))} {-sin(rad.y)}}
  addUserKnob {13 normY}
  normY {{cos(rad.z)*(sin(rad.y)*(-sin(rad.x)))-sin(rad.z)*(cos(rad.x))} {sin(rad.z)*(sin(rad.y)*(-sin(rad.x)))-cos(rad.z)*(cos(rad.x))} {(cos(rad.y)*(-sin(rad.x)))}}
  addUserKnob {13 normZ}
  normZ {{cos(rad.z)*(sin(rad.y)*cos(rad.x))-sin(rad.z)*sin(rad.x)} {cos(rad.z)*(sin(rad.y)*cos(rad.x))+cos(rad.z)*sin(rad.x)} {cos(rad.y)*cos(rad.x)}}
  addUserKnob {26 ""}
  addUserKnob {13 scale}
  scale {{scalediv.x/10*parent.uni_scale} {scalediv.y/10*parent.uni_scale} {scalediv.z/10*parent.uni_scale}}
 }
push $N724a7c00
 Expression {
  temp_name0 x
  temp_expr0 abs(normX.x*(center.r+parent.offset.x-r)+normX.y*(center.g+parent.offset.y-g)+normX.z*(center.b+parent.offset.z-b))
  temp_name1 y
  temp_expr1 abs(normY.x*(center.r+parent.offset.x-r)+normY.y*(center.g+parent.offset.y-g)+normY.z*(center.b+parent.offset.z-b))
  temp_name2 z
  temp_expr2 abs(normZ.x*(center.r+parent.offset.x-r)+normZ.y*(center.g+parent.offset.y-g)+normZ.z*(center.b+parent.offset.z-b))
  channel0 none
  channel1 none
  channel2 none
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "r == 0 && g == 0 && b == 0?0:(scale.x != 1 || scale.y != 1 || scale.z != 1?1-(sqrt(pow2(x)/pow2(scale.x)+pow2(y)/pow2(scale.y)+pow2(z)/pow2(scale.z))/parent.radius):1-(sqrt(pow2(x)+pow2(y)+pow2(z))/parent.radius))"
  name Sphere
  xpos -951
  ypos -348
  cached true
  addUserKnob {20 User}
  addUserKnob {18 center l Center}
  center {0.7377929688 0.6266067028 0}
  addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {26 ""}
  addUserKnob {13 rad}
  rad {{radians(parent.rotate.x)} {radians(parent.rotate.y)} {radians(parent.rotate.z)}}
  addUserKnob {13 normX}
  normX {{cos(rad.z)*(cos(rad.y))} {sin(rad.z)*(cos(rad.y))} {-sin(rad.y)}}
  addUserKnob {13 normY}
  normY {{cos(rad.z)*(sin(rad.y)*(-sin(rad.x)))-sin(rad.z)*(cos(rad.x))} {sin(rad.z)*(sin(rad.y)*(-sin(rad.x)))-cos(rad.z)*(cos(rad.x))} {(cos(rad.y)*(-sin(rad.x)))}}
  addUserKnob {13 normZ}
  normZ {{cos(rad.z)*(sin(rad.y)*cos(rad.x))-sin(rad.z)*sin(rad.x)} {cos(rad.z)*(sin(rad.y)*cos(rad.x))+cos(rad.z)*sin(rad.x)} {cos(rad.y)*cos(rad.x)}}
  addUserKnob {26 ""}
  addUserKnob {13 scale}
  scale {{scalediv.x/10*parent.uni_scale} {scalediv.y/10*parent.uni_scale} {scalediv.z/10*parent.uni_scale}}
 }
 Switch {
  inputs 2
  which {{shape}}
  name Switch3
  xpos -889
  ypos -259
 }
 Grade {
  channels alpha
  whitepoint {{"1-(min(parent.inner_radius, parent.radius)*(1/parent.radius))"}}
  white_clamp true
  name inner_Radius
  label "\[if \{\[value reverse]==\"false\"\} \{return \"\[knob this.icon -]\"\} \{return \"\[knob this.icon Reverse]\"\}]\[value icon]"
  xpos -889
  ypos -186
  icon -
 }
 Dot {
  name Dot3
  xpos -855
  ypos -95
 }
set N92b2b800 [stack 0]
 ScanlineRender {
  inputs 2
  motion_vectors_type velocity
  name ScanlineRender1
  xpos -7
  ypos -101
  disable true
 }
 Dot {
  name Dot2
  xpos 27
  ypos 384
 }
push $N92b2b800
 Expression {
  expr3 a+(a-pow(a,2))
  name Inv_Cubic
  xpos -735
  ypos 33
 }
push $N92b2b800
 Expression {
  expr3 pow(a,2)
  name Cubic
  xpos -835
  ypos 32
 }
push $N92b2b800
 Expression {
  expr3 smoothstep(0,1,a)
  name Smoothstep
  xpos -940
  ypos 30
 }
push $N92b2b800
 Expression {
  name Linear
  xpos -1050
  ypos 30
 }
 Switch {
  inputs 4
  which {{parent.falloff i}}
  name Switch1
  xpos -888
  ypos 157
 }
set N753c3180 [stack 0]
 Dot {
  name Dot4
  xpos -854
  ypos 244
 }
push $N753c3180
push $N9d905800
 Grade {
  inputs 1+1
  multiply {{parent.r} {parent.g} {parent.b} 0}
  name Grade1
  xpos -594
  ypos 157
  disable {{!overlay}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopytoRight
  xpos -594
  ypos 229
 }
set N9d0ce400 [stack 0]
 Expression {
  expr0 ((x-offset.x)<0?1+((x-offset.x)/width*3)-int((x-offset.x)/width*3):((x-offset.x)/width*3)-int((x-offset.x)/width*3))
  expr1 ((y-offset.y)<0?1+((y-offset.y)/height*3)-int((y-offset.y)/height*3):((y-offset.y)/height*3)-int((y-offset.y)/height*3))
  name ExpFTVFX
  xpos -484
  ypos 267
 }
push $N9d0ce400
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  cliptype none
  replace true
  message FranklinVFX.com
  old_message {{70 114 97 110 107 108 105 110 86 70 88 46 99 111 109}
    }
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font {{ Arial : Regular : arial.ttf : 0 }}
  center {1024 778}
  group_animations {{0} imported: 0 selected: 0 items: "root transform/"}
  animation_layers {{1 11 1024 778 0 0 1 1 0 0 0 0}
    }
  name TextFTVFX
  xpos -594
  ypos 267
 }
 Transform {
  translate {300 300}
  rotate 45
  shutteroffset centred
  name TransformFTVFX
  xpos -594
  ypos 293
 }
 STMap {
  inputs 2
  channels rgba
  uv rgb
  name STMapFTVFX
  xpos -484
  ypos 293
 }
push $N9d0ce400
 Merge {
  inputs 2
  name MergeFTVFX
  selected true
  xpos -484
  ypos 319
  disable {{"\$gui"}}
 }
 Merge2 {
  inputs 2
  bbox B
  name MergefromRight
  xpos -594
  ypos 693
  disable true
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -594
  ypos 719
 }
set N9c20c000 [stack 0]
 Multiply {
  inputs 1+1
  value 0
  invert_mask true
  name Multiply3
  xpos -709
  ypos 802
  disable {{!AlphaCheck.alpha i}}
 }
push $N9c20c000
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch10
  xpos -594
  ypos 890
 }
 Multiply {
  channels alpha
  value {{parent.opacity i}}
  name Multiply2
  xpos -594
  ypos 968
 }
 Output {
  name FranklinVFX
  xpos -594
  ypos 1062
 }
end_group
