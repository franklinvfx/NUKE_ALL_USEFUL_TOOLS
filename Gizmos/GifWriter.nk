Group {
 name GifWriter
 tile_color 0xdfff00ff
 selected true
 xpos 206
 ypos -21
 addUserKnob {20 User}
 addUserKnob {52 logo l "" +STARTLINE T gifwriter_ui.LogoKnob() +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 gifpath l "Gif Path" T Write1.gifpath}
 addUserKnob {41 res l "Gif Width" T Write1.res}
 addUserKnob {41 fps_1 l FPS -STARTLINE T Write1.fps_1}
 addUserKnob {6 AutoPreformat l "Auto 1080p Reformat" t "As the prores codec have a limited supported resolution set, this will make sure that the input is set to 1080p before being rendered out" -STARTLINE}
 addUserKnob {41 Render T Write1.Render}
 addUserKnob {26 ""}
 addUserKnob {26 spacer l "" +STARTLINE T "\n"}
 addUserKnob {20 Settings}
 addUserKnob {26 devider_proxy l "Proxy Options"}
 addUserKnob {26 info l "" +STARTLINE T "Nuke will first render out a mov and then convert that to a gif. \nHere you can specify the format options for that mov."}
 addUserKnob {41 mov64_codec l codec T Write1.mov64_codec}
 addUserKnob {41 colorspace T Write1.colorspace}
 addUserKnob {26 ffmpegoptions l "ffmpeg options"}
 addUserKnob {26 ffmpegexeinfo l "" +STARTLINE T "If you don't have a env variable for ffmpeg, or if its not being registered by python in Nuke, \nthen please specify the full path for the ffmpeg execuateable here.\nTypical paths are:\nWindows: \"C:\\ffmpeg\\bin\\ffmpeg.exe\"\nLinux and OSX: \"/usr/local/bin/ffmpeg\"\nOtherwise leave at \"ffmpeg\""}
 addUserKnob {41 ffmpegexec l "ffmpeg exec" T Write1.ffmpegexec}
 addUserKnob {20 About}
 addUserKnob {26 aboutInfo l "" +STARTLINE T "GifWriter by Mads Hagbarth Damsbo 2017\nwww.hagbarth.net\n\n* Before using this node make sure that you have ffmpeg installed.\nIf you are on Windows and don't have a ffmpeg environment variable\nplease specify the path to the exe under settings.\n\n* Also make sure that the output format for the mov file is supported by your system / output format.\n\n* The following takes place under the hood:\n1) First the node render out a mov in the output directory called:  \"__gif_proxymov.mov\"\n2) It then generates a color palette file in the output directory called: \"__gif_palette.png\"\n3) The mov file is converted to gif.\n4) The mov and png is deleted again."}
}
 Input {
  inputs 0
  name Input1
  xpos 509
  ypos 123
 }
 Reformat {
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  name Reformat1
  xpos 509
  ypos 188
  disable {{!parent.AutoPreformat}}
 }
 Write {
  file "\[join \[lrange \[split \[file dirname \[value gifpath]] \"/\"] 0 end] \"/\"]/__gif_proxymov.mov"
  colorspace Gamma2.2
  file_type mov
  meta_codec apcn
  mov64_format "mov (QuickTime / MOV)"
  mov64_codec apcn
  mov64_bitrate 20000
  mov64_bitrate_tolerance 40000000
  mov64_quality_min 2
  mov64_quality_max 31
  mov64_gop_size 12
  mov64_b_frames 0
  checkHashOnRead false
  version 49
  afterRender "import thread\nk = nuke.thisNode()\['GenerateGif']\n\nthread.start_new_thread(nuke.executeInMainThread, (k.execute, ()))"
  name Write1
  selected true
  xpos 509
  ypos 220
  addUserKnob {20 User}
  addUserKnob {22 GenerateGif T "import os\nthisNode = nuke.thisNode()\nPath = thisNode\['gifpath'].value()\nDstFile = Path\nSourceFile = os.path.join(os.path.dirname(Path),'__gif_proxymov.mov')\nPalette = os.path.join(os.path.dirname(Path),'__gif_palette.png')  \nfps = str(thisNode\['fps_1'].value())\nscale = str(thisNode\['res'].value())\nffmpegExec = thisNode\['ffmpegexec'].value()\n#First we generate the palette to get a much prettier gif\nif os.system(ffmpegExec) == 32512:\n    nuke.message(\"FFMPEG NOT FOUND, if ffmpeg is installed please set the full path for ffmpeg for example: /usr/local/bin/ffmpeg for osx\")\nelse:\n    print 'GIF WRITER :: Running,%s -y -i %s -vf \\ fps=%s,scale=%s:-1:flags=lanczos,palettegen %s' %(ffmpegExec,SourceFile,fps,scale,Palette)\n    os.system('%s -y -i %s -vf \\ fps=%s,scale=%s:-1:flags=lanczos,palettegen %s' %(ffmpegExec,SourceFile,fps,scale,Palette))\n    #Then we convert the mov to a gif using palette generated above\n    print 'GIF WRITER :: Running,%s -y -i %s -i %s -filter_complex \\ \"fps=%s,scale=%s:-1:flags=lanczos\[x];\[x]\[1:v]paletteuse\" %s'%(ffmpegExec,SourceFile,Palette,fps,scale,DstFile)\n    os.system('%s -y -i %s -i %s -filter_complex \\ \"fps=%s,scale=%s:-1:flags=lanczos\[x];\[x]\[1:v]paletteuse\" %s'%(ffmpegExec,SourceFile,Palette,fps,scale,DstFile))\n    os.remove(SourceFile)\n    os.remove(Palette)\n\n\n" +STARTLINE}
  addUserKnob {3 fps_1 l fps}
  fps_1 24
  addUserKnob {3 res}
  res 400
  addUserKnob {2 gifpath}
  gifpath /mygif.gif
  addUserKnob {1 ffmpegexec}
  ffmpegexec /usr/local/bin/ffmpeg
 }
 Output {
  name Output1
  xpos 509
  ypos 291
 }
end_group
