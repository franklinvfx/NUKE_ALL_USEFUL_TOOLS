set cut_paste_input [stack 0]
version 6.3 v4
push $cut_paste_input
NoOp {
 name KnobChange
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() in ('RetimeChoice', 'showPanel'):\n    mode = node\['RetimeChoice'].value()\n    if mode == 'FrameHold':\n        node\['Frm'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv(Frm)')\n        node\['NodeCtrl'].setVisible(False)\n        node\['Frm'].setLabel('FrameHold')\n    elif mode == 'Set Reference Frame':\n        node\['Frm'].setVisible(True)\n        node\['NodeCtrl'].setVisible(False)\n        node\['CurveResult'].setExpression('Crv-Crv(Frm)')\n        node\['Frm'].setLabel('Reference Frame')\n    elif mode == 'Time Offset':\n        node\['Frm'].setVisible(True)\n        node\['NodeCtrl'].setVisible(False)\n        node\['Frm'].setLabel('TimeOffset')\n        node\['CurveResult'].setExpression('Crv(frame-Frm)')\n    elif mode == 'TimeWarp':\n        node\['Frm'].setVisible(False)\n        node\['NodeCtrl'].setLabel('TimeWarp name')\n        node\['NodeCtrl'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv(\[value NodeCtrl].lookup)')\n    elif mode == 'Oflow':\n        node\['NodeCtrl'].setLabel('Oflow name')\n        node\['Frm'].setVisible(False)\n        node\['NodeCtrl'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv(\[value NodeCtrl].timing?\[value NodeCtrl].timingFrame:(frame-\[value NodeCtrl].first_frame)*\[value NodeCtrl].timingSpeed+\[value NodeCtrl].first_frame)')\n    elif mode == 'Kronos':\n        node\['NodeCtrl'].setLabel('Kronos name')\n        node\['Frm'].setVisible(False)\n        node\['NodeCtrl'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv(\[value NodeCtrl].timing?\[value NodeCtrl].timingFrame:(frame-\[value NodeCtrl].first_frame)*\[value NodeCtrl].timingSpeed+\[value NodeCtrl].first_frame)')\n    elif mode == 'Twixtor':\n        node\['NodeCtrl'].setLabel('Twixtor name')\n        node\['Frm'].setVisible(False)\n        node\['NodeCtrl'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv(\[value NodeCtrl].TimeRetimeMethod?\[value NodeCtrl].Frame:(frame-\[value NodeCtrl].StartFrame)*(\[value NodeCtrl].Speed/100)+\[value NodeCtrl].StartFrame)')\n    elif mode == 'Retime':\n        node\['NodeCtrl'].setLabel('Retime name')\n        node\['Frm'].setVisible(False)\n        node\['NodeCtrl'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv((frame-\[value NodeCtrl].output.first)*(\[value NodeCtrl].speed)+\[value NodeCtrl].input.first)')"
 tile_color 0xffffffff
 selected true
 xpos -548
 ypos 459
 hide_input true
 addUserKnob {20 User l Options}
 addUserKnob {22 KnobChanged l UnVisible T "node = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() in ('RetimeChoice', 'showPanel'):\n    mode = node\['RetimeChoice'].value()\n    if mode == 'FrameHold':\n        node\['Frm'].setVisible(True)\n        node\['CurveResult'].setExpression('Crv(Frm)')\n        node\['Frm'].setLabel('FrameHold')\n    elif mode == 'Set Reference Frame':\n        node\['Frm'].setVisible(True)\n    elif mode == 'Time Offset':\n        node\['CurveResult'].setExpression('Crv(frame-Frm)')" +STARTLINE}
 addUserKnob {22 newinput l "New Input" T "node = nuke.thisNode()\nknob = nuke.thisKnob()\ninputT = nuke.exists(\"Alpha\") \n\nif knob.name() in ('matte', 'showPanel'):\n    mode = node\['matte'].value()\n    if mode == 'Position Input':\n        if str(inputT)==\"True\":\n             n = nuke.toNode('Alpha')\n             nuke.delete(n)\n\n    elif mode == 'Alpha (New Input)':\n        if str(inputT)==\"False\":\n            nuke.message(\"Add New Input in Node\")\n            i = nuke.createNode('Input', inpanel=False )\n            i\['name'].setValue('Alpha')\n            n = nuke.toNode('Switch2')\n            n.setInput(0,i)" +STARTLINE}
}
