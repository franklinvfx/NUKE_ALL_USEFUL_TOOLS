Group {
 inputs 2
 name Multilayers
 knobChanged "listenedKnobs = \['name_1', 'name_2', 'name_3', 'name_4', 'name_5', 'name_6', 'name_7', 'name_7', 'name_8', 'name_10', 'delete_1', 'delete_2', 'delete_3', 'delete_4', 'delete_5', 'delete_6', 'delete_7', 'delete_8', 'delete_9', 'delete_10']\n\nif nuke.thisKnob().name() in listenedKnobs:\n    if 'name_' in nuke.thisKnob().name():\n        if nuke.thisKnob().value():\n            layername = nuke.thisKnob().value()\n            knobname = nuke.thisKnob().name()\n            \n            nuke.Layer(layername, \[layername + '.alpha'])\n            copy = nuke.toNode('Copy' + knobname.split('name_')\[-1])\n            copy.knob('to0').setValue(layername + '.alpha')\n\n                \n\n\n\n                \n            \n"
 selected true
 addUserKnob {20 FT l "Alpha To Layers"}
 addUserKnob {3 number l INVISIBLE +INVISIBLE}
 number 1
 addUserKnob {22 addlayer l "Add new Layer" T "num = nuke.thisNode().knob('number').value()\nnumplus = int(num + 1)\nnum = int(num)\nnuke.thisNode().knob('number').setValue(numplus)\n\nlayerknob = nuke.String_Knob('name_' + str(numplus), 'Layer ' + str(numplus), str(numplus) + '_')\nfullalphaknob = nuke.Boolean_Knob('full_alpha_' + str(numplus), 'To Alpha', True)\nnuke.thisNode().addKnob(layerknob)\nnuke.thisNode().addKnob(fullalphaknob)\n\nwith nuke.thisNode():\n    i = nuke.createNode(\"Input\", inpanel=False)\n    c = nuke.createNode(\"Copy\", inpanel=False)\n    a = nuke.createNode(\"AddChannels\", inpanel=False)\n    m = nuke.createNode(\"Multiply\", inpanel=False)\n    \n    i.knob(\"name\").setValue('Input' + str(numplus))\n    m.knob(\"name\").setValue('Multiply' + str(numplus))\n    m.knob(\"value\").setValue(0)\n    m.knob(\"disable\").setExpression('parent.full_alpha_' + str(numplus))\n    c.knob(\"name\").setValue('Copy' + str(numplus))\n    c.knob(\"to0\").setValue('none')\n    a.knob(\"name\").setValue('AddChannels' + str(numplus))\n    a.knob(\"channels\").setValue('alpha')\n    \n    prev_copy = nuke.toNode('Copy' + str(num))\n    copyfull = nuke.toNode('Copy_fullalpha')\n    mergefull = nuke.toNode('Merge_full')\n    \n    a.setInput(0, i)\n    m.setInput(0, a)\n    c.setInput(0, prev_copy)\n    c.setInput(1, a)\n    copyfull.setInput(0, c)\n\n    if num >= 2:\n        numskip = num + 1\n        mergefull.setInput(numskip, m)\n    else:\n        mergefull.setInput(num, m)" +STARTLINE}
 addUserKnob {22 removelayer l "Remove last Layer" -STARTLINE T "knobname = nuke.thisKnob().name()\nnum = nuke.thisNode().knob('number').value()\nnum = int(num)\nnum = str(num)\nknobtoremove = nuke.thisNode().knob('name_' + num)\nknobtoremove2 = nuke.thisNode().knob('full_alpha_' + num)\ninputnum = int(num)\n\nif knobtoremove.name() == 'name_1':\n    nuke.message('No more layer to remove')\nelse:\n    nuke.thisNode().removeKnob(knobtoremove)\n    nuke.thisNode().removeKnob(knobtoremove2)\n    nuke.thisNode().setInput(inputnum,None)\n    \n    with nuke.thisNode():\n        nuke.delete(nuke.toNode('Input' + num))\n        nuke.delete(nuke.toNode('AddChannels' + num))\n        nuke.delete(nuke.toNode('Copy' + num))\n        nuke.delete(nuke.toNode('Multiply' + num))\n        \n        knobnum = nuke.thisNode().knob('number').value()\n        knobnum = knobnum - 1\n        nuke.thisNode().knob('number').setValue(knobnum)\n    \n"}
 addUserKnob {6 crop l "Crop to format" -STARTLINE}
 crop true
 addUserKnob {26 S01 l " "}
 addUserKnob {1 name_1 l "    Layer 1"}
 name_1 1_channel_name
 addUserKnob {6 full_alpha_1 l "To Alpha" -STARTLINE}
 full_alpha_1 true
 addUserKnob {1 output l INVISIBLE +INVISIBLE}
 output "\[value number] Layers"
}
 Input {
  inputs 0
  name Input1
  xpos 333
  ypos 381
  number 1
 }
 AddChannels {
  channels alpha
  name AddChannels1
  xpos 333
  ypos 407
 }
set N7029d000 [stack 0]
 Multiply {
  value 0
  name Multiply1
  xpos 333
  ypos 480
  disable {{parent.full_alpha_1}}
 }
 Merge2 {
  name Merge_full
  xpos 333
  ypos 596
 }
push $N7029d000
 Input {
  inputs 0
  name Master
  xpos 443
  ypos 379
 }
 Remove {
  operation keep
  channels rgb
  name Remove1
  xpos 443
  ypos 405
 }
add_layer {1_channel_name 1_channel_name.red 1_channel_name.alpha}
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 1_channel_name.alpha
  name Copy1
  xpos 443
  ypos 485
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy_fullalpha
  xpos 443
  ypos 590
 }
 Crop {
  box {0 0 {input.width} {input.height}}
  name Crop1
  xpos 443
  ypos 628
  disable {{!parent.crop}}
 }
 Output {
  name FranklinVFX
  xpos 443
  ypos 700
 }
end_group
