set cut_paste_input [stack 0]
version 10.0 v1
push $cut_paste_input
Group {
name LUE4NUKE1
tile_color 0x2c00ffff
selected true
xpos 526
ypos 226
addUserKnob {20 Primaries}
addUserKnob {26 Credits l "" +STARTLINE T "<img src=C:/Users/gbaldy/.nuke/LUE/lue.png>"}
addUserKnob {22 Init_logo l INVISIBLE +INVISIBLE T "DotNuke = nukescripts.getNukeUserFolder() \nif os.path.isfile(DotNuke+\"/LUE/lue.png\"):\n\tnuke.thisNode().knob(\"Credits\").setValue(\"<img src=\"+DotNuke+\"/LUE/lue.png>\")" +STARTLINE}
addUserKnob {52 Init_Init_logo T "nuke.thisNode().knob(\"Init_logo\").execute()" +STARTLINE}
addUserKnob {22 CurveKnobSetup l INVISIBLE +INVISIBLE T "#Initialize Curve Knobs\n#Need to clean up old code!!!\n\nthisNode = nuke.thisNode()\n\ntry:\n\tthisNode.knob(\"lut\").delCurve(\"sat_thrsh\")\n\tthisNode.knob(\"lut\").delCurve(\"amount\")\n\tthisNode.knob(\"lut\").addCurve(\"HueVsHue\")\n\tthisNode.knob(\"lut\").addCurve(\"HueVsSat\")\n\tthisNode.knob(\"lut\").addCurve(\"HueVsLum\")\n\tthisNode.knob(\"lut\").addCurve(\"SatVsSat\")\n\tthisNode.knob(\"lut\").addCurve(\"SatVsLum\")\n\tthisNode.knob(\"lut\").addCurve(\"BlackAndWhite\")\n\n\tdef RunNode():\n\t\tif nuke.thisKnob().Class() == \"LookupCurves_Knob\":\n\t\t\tthisNode = nuke.thisNode().fullName().split(\".\")\[-2]\n\t\t\twith nuke.Root():\n\t\t\t\tinputNode = nuke.toNode(thisNode)\n\t\t\t\tcurve = inputNode.knob(\"lut\").toScript()\n\t\t\twith inputNode:\n\t\t\t\tmyCurve = curve.splitlines()\[0]\n\t\t\t\tnuke.toNode(inputNode.name()+\".HueVsHue\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[1]\n\t\t\t\tnuke.toNode(inputNode.name()+\".HueVsSat\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[2]\n\t\t\t\tnuke.toNode(inputNode.name()+\".HueVsLum\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[3]\n\t\t\t\tnuke.toNode(inputNode.name()+\".SatVsSat\").knob(\"lut\").editCurve(\"master\",myCurve)\n\t\t\t\tmyCurve = curve.splitlines()\[4]\n\t\t\t\tnuke.toNode(inputNode.name()+\".SatVsLum\").knob(\"lut\").editCurve(\"master\",myCurve)            \n\t\t\t\tmyCurve = curve.splitlines()\[5]\n\t\t\t\tnuke.toNode(inputNode.name()+\".BlackAndWhite\").knob(\"lut\").editCurve(\"amount\",myCurve) \n\t\t\t\tnuke.toNode(\"HueKeyer2\").knob('knobChanged').setValue(\"RunNode()\")\n\t\t\t#help(nuke.toNode(\"HueKeyer1\").knob('knobChanged').setValue)\nexcept:\n    pass\n\n\n#Hue VS Hue\nwith thisNode:\n    curve = nuke.toNode(\"HueVsHue\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"HueVsHue\",myCurve\[8:-1])\n\n#Hue Vs Sat\nwith thisNode:\n    curve = nuke.toNode(\"HueVsSat\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"HueVsSat\",myCurve\[8:-1])\n\n#Hue Vs Lum\nwith thisNode:\n    curve = nuke.toNode(\"HueVsLum\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"HueVsLum\",myCurve\[8:-1])\n\n#Sat Vs Sat\nwith thisNode:\n    curve = nuke.toNode(\"SatVsSat\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"SatVsSat\",myCurve\[8:-1])\n\n#Sat Vs Lum\nwith thisNode:\n    curve = nuke.toNode(\"SatVsLum\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"SatVsLum\",myCurve\[8:-1])\n\n\n#Hue Vs Lum\nwith thisNode:\n    curve = nuke.toNode(\"BlackAndWhite\").knob(\"lut\").toScript()\n    myCurve = curve.splitlines()\[0]\nthisNode.knob(\"lut\").editCurve(\"BlackAndWhite\",myCurve\[13:-1])\n\n\n\n#curve = nuke.toNode(\"HueKeyer1\").knob(\"lut\").toScript()\n#myCurve = curve.splitlines()\[2]\n#print myCurve\n#nuke.toNode(\"HueKeyer2\").knob(\"lut\").editCurve(\"amount\",myCurve)\n\n\n\n\ndef RunNode():\n\tif nuke.thisKnob().Class() == \"LookupCurves_Knob\":\n\t\tthisNode = nuke.thisNode().fullName().split(\".\")\[-2]\n\t\twith nuke.Root():\n\t\t\tinputNode = nuke.toNode(thisNode)\n\t\t\tcurve = inputNode.knob(\"lut\").toScript()\n\t\twith inputNode:\n\t\t\tmyCurve = curve.splitlines()\[0]\n\t\t\tnuke.toNode(inputNode.name()+\".HueVsHue\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[1]\n\t\t\tnuke.toNode(inputNode.name()+\".HueVsSat\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[2]\n\t\t\tnuke.toNode(inputNode.name()+\".HueVsLum\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[3]\n\t\t\tnuke.toNode(inputNode.name()+\".SatVsSat\").knob(\"lut\").editCurve(\"master\",myCurve.replace(\"master\",\"curve\")\[10:-1])\n\t\t\tmyCurve = curve.splitlines()\[4]\n\t\t\tnuke.toNode(inputNode.name()+\".SatVsLum\").knob(\"lut\").editCurve(\"master\",myCurve.replace(\"master\",\"curve\")\[10:-1])    \n\t\t\tmyCurve = curve.splitlines()\[5]\n\t\t\tnuke.toNode(inputNode.name()+\".BlackAndWhite\").knob(\"lut\").editCurve(\"amount\",myCurve.replace(\"amount\",\"curve\")\[15:-1])          \n\t\t\tnuke.toNode(\"HueKeyer2\").knob('knobChanged').setValue(\"RunNode()\")" +STARTLINE}
addUserKnob {52 Init_CurveKnobSetup l "" +STARTLINE T "nuke.thisNode().knob(\"CurveKnobSetup\").execute()" +STARTLINE}
addUserKnob {52 SMH_init T "nuke.toNode(nuke.thisNode().name()+\".BaseColorCorrect\").knob(\"RunThis\").execute()" +STARTLINE}
addUserKnob {52 init_init_colorwheel l "" +STARTLINE T "nuke.thisNode().knob(\"init_colorwheel\").execute()" +STARTLINE}
addUserKnob {22 init_colorwheel l INVISIBLE +INVISIBLE T "import sys, math\nimport nuke\nimport PySide.QtGui as QtGui\nimport PySide.QtCore as QtCore\nfrom PySide.QtGui import *\nfrom PySide.QtCore import *\nfrom PySide.QtWebKit import *\nfrom nukescripts import panels\nimport datetime\n#Projekt Variabler\n\n#FasteVariabler\ntry:\n\tif defined == 1:\n\t    pass\n\t    #print \"allready launched\"\nexcept: \n\tclass ColorWheelWidget(QtGui.QWidget):\n\t    def __init__(self, parent=None, mainDiameter=138, outerRingWidth=10,my_Knob=\"None\"):\n\t        QtGui.QWidget.__init__(self, parent)\n\t        # this is the pixel diameter of the actual color wheel, without the extra decorations drawn as part of this widget\n\t        self.dim = mainDiameter\n\t        self.offset = outerRingWidth\n\t        self.ColorKnob = my_Knob\n\t        self.colorWheelSensitivity = 0.1\n\t        self.setstate = 0\n\t        self.bMouseDown = False\n\t        self.shiftDown = False\n\t        self.ctrlDown = False\n\t        self.altDown = False\n\t        self.guiSelection = 0\n\t        self.middleMouse = 0\n\t        self.initialPoint = (0,0)    \n\t        self.master_radius = (self.dim/2)+self.offset+1\n\t        self.huepoint = (self.master_radius, self.master_radius)\n\t        self.value_angle = 360\n\t        self.value_angleSat = 0\t   \n\t        color = QtGui.QColor(0,0,0,0).rgba()\n\t        self.myTimer = QtCore.QTime()\n\t \n\t        self.center = (self.master_radius, self.master_radius)\n\t        # this is the color value that this widget represents\n\t        self.color = QtGui.QColor()\n\n\n\n\t        # the color wheel image, only needs to be generated once\n\t        self.image = QtGui.QImage(self.master_radius*2, self.master_radius*2, QtGui.QImage.Format_ARGB32)\n\t        # this is the image for the current color selection\n\t        self.current_image = QtGui.QImage(self.master_radius*2, self.master_radius*2, QtGui.QImage.Format_ARGB32)\n\t        self.current_image.fill(QtGui.QColor(self.color).rgba())\n\t        self.current_imageB = QtGui.QImage(self.master_radius*2, self.master_radius*2, QtGui.QImage.Format_ARGB32)\n\t        self.current_imageB.fill(QtGui.QColor(self.color).rgba())       \n\t        # these are used for the current color selection image\n\t        self.lastPoint = (self.master_radius, self.master_radius)\n\t        self.currentPoint = (self.master_radius, self.master_radius)\n\t        self.points = self.getRadialLinePoints((self.dim / 2), self.master_radius, 45)\n\t        self.points2 = self.getRadialLinePoints((self.dim / 2), self.master_radius, 135)\t        \n\t        self.image.fill(color)\n\n\n\t        self.color.setRgbF(min(1,max(0,my_Knob.value()\[0])),min(1,max(0,my_Knob.value()\[1])),min(1,max(0,my_Knob.value()\[2])))\n\n\n\t        self.luma = (my_Knob.value()\[3]/2.0)*255.0\n\t        self.hue = self.color.hueF()*255.0\n\t        self.sat = self.color.saturationF()*255.0\n\t   \n\n\t        self.setUIColor(self.hue,self.sat,self.luma) \n\n\t        for y in range(int(self.master_radius*2)):\n\t            for x in range(int(self.master_radius*2)):\n\t                d = 2 * self.getDist((x,y),self.center) / self.dim\n\t                if d <= 1: #Hue Wheel\n\t                    color = QtGui.QColor()\n\t                    hue = self.getHue(x, y)\n\t                    percent = max(0,min(1,(d - 0.90)*30))\n\t                    color.setHsv(hue,(d*255),90+(165*percent),90+(165*percent)) #The dark part in the center\n\n\t                    self.image.setPixel(x,y, color.rgba())\n\t                else:\n\t                    d2 = self.getDist((x,y),self.center) / (self.master_radius-1)\n\t                    if d2 > 1: #MainBG                       \n\t                        color = QtGui.QColor()\n\t                        color.setAlpha(0)\n\t                        self.image.setPixel(x,y, color.rgba())\n\t                    else:\n\t                    \tpass\n\n\t        self.setUIColor(self.hue,self.sat,self.luma) \n\t        self.setColor(self.hue, self.sat, self.luma)\n\n\n\t    def getRadialLinePoints(self, r_inner, r_outer, angle,distance=1.0):\n\t        rad = math.radians(angle)\n\t        sr = math.sin(rad)\n\t        cr = math.cos(rad)\n\t        x1 = r_outer - (r_outer * (sr*distance))\n\t        y1 = r_outer - (r_outer * (cr*distance)) \n\t        x2 = r_outer - (r_inner * (sr*distance))\n\t        y2 = r_outer - (r_inner * (cr*distance))\n\t        return (x1, y1, x2, y2)\n\t  \n\t    def getRot(self, x, y):\n\t        return ( math.degrees ( math.atan2 ( 2*(x - self.master_radius),2*(y - self.master_radius)))) % 360\n\t    def getLum(self, x, y):\n\t        return ( math.degrees ( math.atan2 ( 2.0*(x - self.master_radius),2.0*(y - self.master_radius)))) % 360\n\n\t    def getHue(self, x, y):\n\t        return ( math.degrees ( math.atan2 ( 2*(x - self.master_radius),2*(y - self.master_radius))) + 165 ) % 360\n\t    \n\t    def setColor(self, h, s, v):\n\n\t        self.color.setHsvF(0.0,0.0,min(1,v/255.0))\n\t        alpha = self.current_image.alphaChannel()\n\t        self.current_image.fill(self.color.rgb())\n\t        self.current_image.setAlphaChannel(alpha)\n\t        self.color.setHsvF(min(1,h/255.0),1.0,min(1,v/255.0)) #Should be 255 and not 254.5 but it causes a unknown error!\n\t        alpha = self.current_imageB.alphaChannel()\n\t        self.current_imageB.fill(self.color.rgb())\n\t        self.current_imageB.setAlphaChannel(alpha)\n\t        self.update()      \n\n\t    def reset(self,x):\n\t        self.middleMouse = 1\n\t        self.bMouseDown = True\n\t        self.guiSelection = 0\n\t        self.initialPoint = (self.center\[0], self.center\[1])\n\t        self.lastPoint = (self.center\[0], self.center\[1]) \n\t        self.alterColor(self.lastPoint\[0], self.lastPoint\[1])\n\t        self.guiSelection = 1\n\t        self.initialPoint = (self.center\[0], self.center\[1])\n\t        self.lastPoint = (self.center\[0], self.center\[1]) \n\t        self.alterColor(self.lastPoint\[0], self.lastPoint\[1]-10)\n\t        self.lastPoint = self.currentPoint\n\t        self.setColor(self.hue, self.sat, self.luma)\n\t        self.setUIColor(self.hue,self.sat,self.luma)\n\t        self.bMouseDown = False\n\t        if not self.ColorKnob == \"None\":\n\t\t\t\ttry:\n\t\t\t\t\tself.color.setHsvF(min(1,self.hue/255.0),min(1,self.sat/255.0),1.0)\n\t\t\t\t\tself.ColorKnob.setValue(\[float(self.color.redF()),float(self.color.greenF()),float(self.color.blueF()),float(self.luma*2)/255])\n\t\t\t\texcept: \n\t\t\t\t\tprint \"Error trying to send values to color control. Make sure all layouts are set to 4 Colors and not 1\"\n\n\t        \n\t    def getDist(self, (x1, y1), (x2, y2)):\n\t        return math.sqrt((x2-x1)**2 + (y2-y1)**2)\n\t        \n\t    def paintEvent(self, evt):\n\t        painter = QtGui.QPainter(self)\n\t        painter.setRenderHint(QtGui.QPainter.Antialiasing)\n\t        pen = QtGui.QPen()\n\t        if not self.ColorKnob == \"None\":\n\t\t\t\ttry:\n\t\t\t\t\tif self.setstate > 0:\n\t\t\t\t\t\tself.color.setHsvF(min(1,self.hue/255.0),min(1,self.sat/255.0),1.0)\n\t\t\t\t\t\tself.ColorKnob.setValue(\[float(self.color.redF()),float(self.color.greenF()),float(self.color.blueF()),float(self.luma*2)/255])\n\t\t\t\t\tif self.setstate > 1:\n\t\t\t\t\t\tself.setstate = 0\n\n\t\t\t\texcept: \n\t\t\t\t\tprint \"Error trying to send values to color control. Make sure all layouts are set to 4 Colors and not 1\"\n\t        self.color.setHsvF(min(1,self.hue/255.0),min(1,self.sat/255.0),min((self.luma/255.0)*2.0,1.0))\n\t        brush = QtGui.QBrush(QtGui.QColor(self.color.rgb())) #Color of the elipse\n\t        pen.setColor(QtGui.QColor(20,20,20)) #Outline Color\n\t        pen.setWidth(2) #Outline Width\n\t        painter.setPen(pen)\n\t        \n\t        painter.drawImage(0,0,self.image)\n\t        #painter.drawImage(0,0,self.current_image)\n\t        #painter.drawImage(0,0,self.current_imageB)\n\t        r = self.dim/2 \n\t        r2 = r + self.offset\n\t        center = QtCore.QPoint(r2+2,r2+2) \n\t        center = QtCore.QPointF(self.center\[0],self.center\[1] )\n\t        \n\t        painter.drawEllipse(center, r, r ) #DRAW THE OUTER BLACK CIRCLE\n\n\n\t   \n\t        #LUMINANCE ARC\n\t        pen.setWidth(3) #Outline Width\n\t        pen.setColor(QtGui.QColor(150,150,150)) #Outline Color\n\t        gradient = QtGui.QConicalGradient()\n\t        gradient.setCenter(center)\n\t        gradient.setAngle(-90)\n\t        gradient.setColorAt(1, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.497, QtGui.QColor(170, 170, 170))\n\t        gradient.setColorAt(0.498, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.5, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.502, QtGui.QColor(255, 255, 255))\n\t        gradient.setColorAt(0.503, QtGui.QColor(170, 170, 170))\n\t        gradient.setColorAt(0, QtGui.QColor(70, 70, 70))\n\t        pen.setBrush(gradient)\n\n\t        painter.setPen(pen)    \n\t        rectangle = QtCore.QRectF(self.center\[0]-((self.dim*1.1)/2), self.center\[1]-((self.dim*1.1)/2), self.dim*1.1, self.dim*1.1)     \n\t        startAngle = -90*16\n\n\t        spanAngle = (self.value_angle)*16\n\t        painter.drawArc(rectangle, startAngle, spanAngle)\n\n\n\t        pen.setWidth(1) #Outline Width\n\t        pen.setColor(QtGui.QColor(20,20,20)) #Outline Color\n\t        painter.setPen(pen)\n\t        #painter.drawEllipse(center, r-8, r-8) #DRAW THE INNER BLACK CIRCLE\n\n\t        pen.setColor(QtGui.QColor(200,200,200)) #Outline Color\n\t        painter.setPen(pen)\n\t        #Middle Crosshair\n\t        painter.drawLine((self.master_radius)+4,(self.master_radius),(self.master_radius)-4,(self.master_radius))\n\t        painter.drawLine((self.master_radius),(self.master_radius)+4,(self.master_radius),(self.master_radius)-4)\n\n\t        pen.setWidth(6) #Outline Width\n\t        painter.setPen(pen)\n\t        (x1,y1,x2,y2) = self.points\n\t        (x1,y1,x2,y2) = self.points2\n\n\n\t        #Draw the GuideLines\n\t        pen.setWidth(1.99)\n\t        pen.setColor(QtGui.QColor(220,220,220))\n\t        pen.setStyle(QtCore.Qt.PenStyle.DashLine)\n\t        painter.setPen(pen)\n\t        (hpx, hpy) =  self.huepoint\n\t        d = self.getDist((hpx,hpy),self.center)\n\t        if self.bMouseDown == False: #Hide the guidelines when the mouse is not clicked\n\t            pass\n\t        else:\n\t            (x1,y1,x2,y2) = self.getRadialLinePoints(0, self.master_radius, ((self.hue/255)*360)+15,0.80) \n\t            painter.drawLine(x1,y1,x2,y2)\n\t            if d > 46: #If the radial is in the bright area, then display a dark version\n\t                pen.setColor(QtGui.QColor(20,20,20))  \n\t                painter.setPen(pen)\n\t            if d != 0:\n\t                painter.drawEllipse(QtCore.QPointF(self.master_radius, self.master_radius), d, d)\n\n\n\t        #Draw Hue Dot\n\t        pen.setWidth(1)\n\t        pen.setStyle(QtCore.Qt.PenStyle.SolidLine)\n\t        if self.luma > 90:\n\t            pen.setColor(QtGui.QColor(0,0,0))\n\t        else:\n\t            pen.setColor(QtGui.QColor(220,220,220))\n\t        painter.setPen(pen)\n\t        painter.setBrush(brush)\n\t        painter.drawEllipse(QtCore.QPointF(hpx, hpy), 5, 5)\n\n\n\n\t    def setUIColor(self,h,s,v):\n\t        (x1,y1,x2,y2) = self.getRadialLinePoints((self.dim / 2.0), self.master_radius,  ((self.hue/255)*360)+15,(s/255.0))\n\t        self.huepoint = (x2,y2)\n\t        self.lastPoint = (x2,y2)\n\t        self.currentPoint = (x2,y2)\n\t        #Saturation\n\t        self.value_angleSat = (1.0-((s/255.0) * 90.0)) + 135.0       \n\n\t        #Luminance\n\t        self.value_angle = ((v/255.0) * 360.0) \n\n\n\t        \n\t    def alterColor(self, x, y):\t\n\t        d = 2.0 * self.getDist((x,y),self.center) / self.dim\n\t        if self.guiSelection == 0:\n\t            if self.getDist((x,y),self.center) >= (self.dim/2.0):\n\t                Percent = self.getDist((x,y),self.center) / (self.dim/2.0)\n\t                prex = (((x-self.center\[0]) / Percent) * 1)+self.center\[0]\n\t                prey = (((y-self.center\[1]) / Percent) * 1)+self.center\[1]\n\t                self.initialPoint = (self.initialPoint\[0]-(prex-x), self.initialPoint\[1]-(prey-y))\n\t                x = prex\n\t                y = prey\n\t            hue = self.getHue(x, y)\n\n\t            self.value_angleSat = (1.0-((self.getDist((x,y),self.center) / (self.dim/2.0)) * 90.0)) + 135.0  \n\t            self.hue = (hue/360)*255\n\t            self.sat = min(d*255.0,255.0)\n\t            self.huepoint = (x,y)\n\t            self.setColor(hue,min(d*255.0,255.0),self.luma)\n\t        \n\t        elif self.guiSelection == 1:\n\t            self.value_angle = self.getRot(x, y)\n\t            lum = self.getLum(x, y)\n\t            v = (lum/360.0)*255.0\n\t            self.setColor(self.color.hueF(), self.color.saturationF(), v)\n\t            self.luma = v\n\n\n\t        else:\n\t            pass\n\n\n\t    def mousePressEvent(self, evt):\n\t    \tself.setstate = 1\n\t        self.myTimer.start()\n\t\t\t\n\t        d = 2 * self.getDist((evt.x(), evt.y()),self.center) / self.dim\n\t        if evt.button() == QtCore.Qt.MouseButton.MiddleButton:\n\t            self.middleMouse = 1\n\t        else:\n\t            self.middleMouse = 0\n\t        if d <= 1: \n\t            self.guiSelection = 0\n\t            if self.middleMouse == 1:\n\t                self.initialPoint = (self.center\[0], self.center\[1])\n\t                self.lastPoint = (self.center\[0], self.center\[1]) \n\t                self.alterColor(self.lastPoint\[0], self.lastPoint\[1])\n\t            else:\n\t                self.initialPoint = (evt.x(), evt.y())\n\t                self.alterColor(self.lastPoint\[0], self.lastPoint\[1])\n\t        else:\n\t            d = self.getDist((evt.x(), evt.y()),self.center) / self.master_radius\n\t            if d <= 1:\n\t                self.guiSelection = 1\n\t                if self.middleMouse == 1:\n\t                    self.initialPoint = (self.center\[0], self.center\[1])\n\t                    self.lastPoint = (self.center\[0], self.center\[1]) \n\t                    self.alterColor(self.lastPoint\[0], self.lastPoint\[1]-10)\n\t                else:\n\t                    self.alterColor(evt.x(), evt.y())\n\t            else:\n\t                self.guiSelection = 3\n\t        self.bMouseDown = True\n\n\n\n\n\t    def mouseMoveEvent(self, evt):\n\t    \tself.setstate = 1\n\t    \tnMilliseconds = self.myTimer.elapsed()\n\t    \tif nMilliseconds < 1:\n\t    \t\tpass\n\t    \telse:\n\n\t\t        modifiers = QtGui.QApplication.keyboardModifiers()\n\t\t        self.shiftDown = False\n\t\t        self.ctrlDown = False\n\t\t        self.altDown = False\n\t\t        self.colorWheelSensitivity = 0.1\n\n\t\t        if modifiers == QtCore.Qt.ShiftModifier:\n\t\t            self.shiftDown = True\n\t\t        if modifiers == QtCore.Qt.ControlModifier:\n\t\t            self.ctrlDown = True\n\t\t        if modifiers == QtCore.Qt.AltModifier:\n\t\t            self.altDown = True\n\t\t            self.colorWheelSensitivity = 1\n\t\t        if modifiers == (QtCore.Qt.ControlModifier | QtCore.Qt.ShiftModifier):\n\t\t            self.ctrlDown = True\n\t\t            self.shiftDown = True\n\n\t\t        if self.bMouseDown and self.middleMouse == 0:\n\t\t            if self.guiSelection == 1 or self.guiSelection == 2:\n\t\t                self.alterColor(evt.x(), evt.y())\n\t\t            else:\n\n\t\t                x = (((evt.x()-self.initialPoint\[0]) * self.colorWheelSensitivity))+self.lastPoint\[0]\n\t\t                y = (((evt.y()-self.initialPoint\[1]) * self.colorWheelSensitivity))+self.lastPoint\[1]\n\t\t                self.alterColor(x, y)\n\t\t                self.currentPoint = (x, y) \n\t\t        self.myTimer.restart()\n\t        \n\n\t    def mouseReleaseEvent(self, evt):\n\t    \tself.setstate = 2\n\t        self.lastPoint = self.currentPoint\n\t        self.setColor(self.hue, self.sat, self.luma)\n\t        self.setUIColor(self.hue,self.sat,self.luma)\n\t        self.bMouseDown = False\n\nclass Example(QtGui.QWidget):\n\tdef __init__(self, parent=None,myNode=\"none\"):\n\t\tQtGui.QWidget.__init__(self, None)\n\t\t#self.setGeometry(900, 900, 800, 600)\n\t\t#self.setWindowTitle('ColorBars')\n\t\tself.baseNode = myNode\n\t\tself.palette = QtGui.QPalette()\n\t\tself.LiftLabel = QtGui.QLabel(\"<b>Lift</b>\")\n\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\tself.LiftLabel.setPalette(self.palette)\n\t\tself.LiftLabel.mouseReleaseEvent = self.showText1\n\t\tself.Lift = ColorWheelWidget(None, 138, 10,myNode.knob(\"Lift\"))\n\n\n\t\tself.GammaLabel = QtGui.QLabel(\"<b>Gamma</b>\")\n\t\tself.GammaLabel.setPalette(self.palette)\n\t\tself.GammaLabel.mouseReleaseEvent = self.showText2\n\t\tself.Gamma = ColorWheelWidget(None, 138, 10,myNode.knob(\"Gamma\"))\n\n\t\tself.GainLabel = QtGui.QLabel(\"<b>Gain</b>\")\n\t\tself.GainLabel.setPalette(self.palette)\n\t\tself.GainLabel.mouseReleaseEvent = self.showText3\n\t\tself.Gain = ColorWheelWidget(None, 138, 10,myNode.knob(\"Gain\"))\n\n\t\tlayout = QtGui.QGridLayout()\n\t\tlayout.addWidget(self.LiftLabel,0,0)\n\t\tlayout.addWidget(self.GammaLabel,0,1)\n\t\tlayout.addWidget(self.GainLabel,0,2)\n\t\tlayout.addWidget(self.Lift,1,0)\n\t\tlayout.addWidget(self.Gamma,1,1)\n\t\tlayout.addWidget(self.Gain,1,2)\n\t\tlayout.setRowStretch(1,1)\n\t\tself.setLayout(layout)\n\t\t#self.show()\n\tdef showText1(self, event):\n\t\tmyNode = self.baseNode.knob(\"LiftEnabled\")\n\t\tif myNode.value() == 1:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n\t\t\tself.LiftLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(0)\n\t\telse:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\t\tself.LiftLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(1)\n\n\tdef showText2(self, event):\n\t\tmyNode = self.baseNode.knob(\"GammaEnabled\")\n\t\tif myNode.value() == 1:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n\t\t\tself.GammaLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(0)\n\t\telse:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\t\tself.GammaLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(1)\n\n\tdef showText3(self, event):\n\t\tmyNode = self.baseNode.knob(\"GainEnabled\")\n\t\tif myNode.value() == 1:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n\t\t\tself.GainLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(0)\n\t\telse:\n\t\t\tself.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n\t\t\tself.GainLabel.setPalette(self.palette)\n\t\t\tmyNode.setValue(1)\n\n\nclass ColorWheelKnob_LGG:\n\tdef __init__( self ):\n\t\tself.instance = 0\n\t\treturn None\n\n\tdef makeUI( self ):\n\t\tself.instance = Example(None,nuke.thisNode())\n\t\treturn self.instance\n\ndefined = 1" +STARTLINE}
addUserKnob {22 init_colorwheel2 l INVISIBLE +INVISIBLE T "class Example2(QtGui.QWidget):\n  def __init__(self, parent=None,myNode=\"none\"):\n    QtGui.QWidget.__init__(self, None)\n    #self.setGeometry(900, 900, 800, 600)\n    #self.setWindowTitle('ColorBars')\n    self.baseNode = myNode\n    self.palette = QtGui.QPalette()\n    self.ShadowLabel = QtGui.QLabel(\"<b>Shadows</b>\")\n    self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n    self.ShadowLabel.setPalette(self.palette)\n    self.ShadowLabel.mouseReleaseEvent = self.showText1\n    self.Shadow = ColorWheelWidget(None, 138, 10,myNode.knob(\"Shadows\"))\n\n\n    self.MidtoneLabel = QtGui.QLabel(\"<b>Midtones</b>\")\n    self.MidtoneLabel.setPalette(self.palette)\n    self.MidtoneLabel.mouseReleaseEvent = self.showText2\n    self.Midtone = ColorWheelWidget(None, 138, 10,myNode.knob(\"Midtones\"))\n\n    self.HighlightLabel = QtGui.QLabel(\"<b>Highlights</b>\")\n    self.HighlightLabel.setPalette(self.palette)\n    self.HighlightLabel.mouseReleaseEvent = self.showText3\n    self.Highlight = ColorWheelWidget(None, 138, 10,myNode.knob(\"Highlights\"))\n\n    layout = QtGui.QGridLayout()\n    layout.addWidget(self.ShadowLabel,0,0)\n    layout.addWidget(self.MidtoneLabel,0,1)\n    layout.addWidget(self.HighlightLabel,0,2)\n    layout.addWidget(self.Shadow,1,0)\n    layout.addWidget(self.Midtone,1,1)\n    layout.addWidget(self.Highlight,1,2)\n    layout.setRowStretch(1,1)\n    self.setLayout(layout)\n    #self.show()\n  def showText1(self, event):\n    myNode = self.baseNode.knob(\"ShadowsEnabled\")\n    if myNode.value() == 1:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n      self.ShadowLabel.setPalette(self.palette)\n      myNode.setValue(0)\n    else:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n      self.ShadowLabel.setPalette(self.palette)\n      myNode.setValue(1)\n\n  def showText2(self, event):\n    myNode = self.baseNode.knob(\"MidtonesEnabled\")\n    if myNode.value() == 1:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n      self.MidtoneLabel.setPalette(self.palette)\n      myNode.setValue(0)\n    else:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n      self.MidtoneLabel.setPalette(self.palette)\n      myNode.setValue(1)\n\n  def showText3(self, event):\n    myNode = self.baseNode.knob(\"HighlightsEnabled\")\n    if myNode.value() == 1:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.red)\n      self.HighlightLabel.setPalette(self.palette)\n      myNode.setValue(0)\n    else:\n      self.palette.setColor(QtGui.QPalette.Foreground,QtCore.Qt.white)\n      self.HighlightLabel.setPalette(self.palette)\n      myNode.setValue(1)\n\nclass ColorWheelKnob_SMH:\n  def __init__( self ):\n    self.instance = 0\n    return None\n\n  def makeUI( self ):\n    self.instance = Example2(None,nuke.thisNode())\n    return self.instance\n" +STARTLINE}
addUserKnob {52 init_init_colorwheel2 T "nuke.thisNode().knob(\"init_colorwheel2\").execute()" +STARTLINE}
addUserKnob {26 info_general l "<b><font color=#70EE70>General</font><b>"}
addUserKnob {22 General_Clear l Clear T "nuke.thisNode().knob(\"blackpoint\").setValue(\[0,0,0,0])\nnuke.thisNode().knob(\"blackpoint\").setValue(0)\nnuke.thisNode().knob(\"whitepoint\").setValue(\[0,0,0,0])\nnuke.thisNode().knob(\"whitepoint\").setValue(1)\nnuke.thisNode().knob(\"add\").setValue(\[0,0,0,0])\nnuke.thisNode().knob(\"add\").setValue(0)\nnuke.thisNode().knob(\"red\").setValue(0)\nnuke.thisNode().knob(\"Temperature\").setValue(1)\nnuke.thisNode().knob(\"Tint\").setValue(1)\nnuke.thisNode().knob(\"Contrast\").setValue(1)\nnuke.thisNode().knob(\"soft_clip\").setValue(0.5)\nnuke.thisNode().knob(\"Saturation\").setValue(1)\nnuke.thisNode().knob(\"ColorBoost\").setValue(1)" +STARTLINE}
addUserKnob {6 General_Enable l Enable -STARTLINE}
General_Enable true
addUserKnob {41 blackpoint l "Blackpoint <font color=#1A1A1A>●</font>" T BaseGrade.blackpoint}
addUserKnob {41 whitepoint l "Whitepoint <font color=#E6E6E6>●</font>" T BaseGrade.whitepoint}
addUserKnob {41 add l "Offset <sup>▲</sup><sub>▼</sub>" T BaseGrade.add}
addUserKnob {26 basedevider l "" +STARTLINE T " \n"}
addUserKnob {41 red l Exposure T Exposure1.red}
addUserKnob {7 Temperature l "Temperature <font color=#E6E6A1><sup>◄</sup></font><font color=#A1E6E6><sub>►</sub></font>" R 0 2}
Temperature 2
addUserKnob {7 Tint l "Tint <font color=#E6A1A1><sup>◄</sup></font><font color=#A1E6A1><sub>►</sub></font>" R 0 2}
addUserKnob {7 Contrast R 0.5 1.5}
Contrast 1
addUserKnob {41 soft_clip l "Contrast Falloff" T RolloffContrast1.soft_clip}
addUserKnob {7 Saturation R 0 2}
Saturation 1
addUserKnob {7 ColorBoost l Vibrance R 0 2}
ColorBoost 1
addUserKnob {6 pop_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 info_liftgammagain l "<b><font color=#70EE70>3-Way LGG</font><b>"}
addUserKnob {22 liftgammagain_clear l Clear T "nuke.thisNode().knob(\"LiftGammaGain\").getObject().instance.Lift.reset(1)\nnuke.thisNode().knob(\"LiftGammaGain\").getObject().instance.Gamma.reset(1)\nnuke.thisNode().knob(\"LiftGammaGain\").getObject().instance.Gain.reset(1)" +STARTLINE}
addUserKnob {6 liftgammagain_Enable l Enable -STARTLINE}
liftgammagain_Enable true
addUserKnob {52 LiftGammaGain l "" t "Hotkeys:\nClick MiddleMouse = Reset\nALT+Drag = Absolute Offset" +STARTLINE T ColorWheelKnob_LGG() +STARTLINE}
addUserKnob {41 out_colorspace l GradingSpace T OCIOColorSpace1.out_colorspace}
addUserKnob {7 LumaMix l " Mix Luma" -STARTLINE}
LumaMix 1
addUserKnob {20 org l "" +STARTLINE n 1}
org 0
addUserKnob {19 Lift R 0 2}
Lift {0.934508278 1 0.9564965286 1.01956363}
addUserKnob {6 Lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 LiftEnabled l "" -STARTLINE}
addUserKnob {19 Gamma R 0 2}
Gamma {1 1 1 1}
addUserKnob {6 Gamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 GammaEnabled l "" -STARTLINE}
GammaEnabled true
addUserKnob {19 Gain R 0 2}
Gain {1 1 1 1}
addUserKnob {6 Gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 GainEnabled l "" -STARTLINE}
GainEnabled true
addUserKnob {20 endGroup n -1}
addUserKnob {26 info_ShadowMidtoneHighlight l "<b><font color=#70EE70>3-Way SMH</font><b>"}
addUserKnob {22 SMH_Clear l Clear T "nuke.thisNode().knob(\"ShadowsMidtonesHighlights\").getObject().instance.Shadow.reset(1)\nnuke.thisNode().knob(\"ShadowsMidtonesHighlights\").getObject().instance.Midtone.reset(1)\nnuke.thisNode().knob(\"ShadowsMidtonesHighlights\").getObject().instance.Highlight.reset(1)" +STARTLINE}
addUserKnob {6 SMH_Enable l Enable -STARTLINE}
addUserKnob {52 ShadowsMidtonesHighlights l "" +STARTLINE T ColorWheelKnob_SMH() +STARTLINE}
addUserKnob {41 low l Low T BaseColorCorrect.low}
addUserKnob {41 High -STARTLINE T BaseColorCorrect.High}
addUserKnob {20 smh_group l "" +STARTLINE n 1}
smh_group 0
addUserKnob {19 Shadows R 0 2}
Shadows {1 1 1 1}
addUserKnob {6 Shadows_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ShadowsEnabled l "" -STARTLINE}
ShadowsEnabled true
addUserKnob {6 Midtones_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 Highlights_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 Midtones R 0 2}
Midtones {1 1 1 1}
addUserKnob {6 Midtones_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 MidtonesEnabled l "" -STARTLINE}
MidtonesEnabled true
addUserKnob {19 Highlights R 0 2}
Highlights {1 1 1 1}
addUserKnob {6 Highlights_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 HighlightsEnabled l "" -STARTLINE}
HighlightsEnabled true
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {20 PAGE_Secondaries l Secondaries}
addUserKnob {26 SplitToning_DEVIDER l "<b><font color=#70EE70>Split Toning</font><b>"}
addUserKnob {22 SplitToning_Clear l Clear T "nuke.thisNode().knob(\"Split_Bright_Hue\").setValue(0.095)\nnuke.thisNode().knob(\"Split_Bright_Sat\").setValue(1)\nnuke.thisNode().knob(\"Split_Dark_Hue\").setValue(0.715)\nnuke.thisNode().knob(\"Split_Dark_Sat\").setValue(1)\nnuke.thisNode().knob(\"Split_Contrast\").setValue(0)\nnuke.thisNode().knob(\"Split_Mix\").setValue(0.17)\nnuke.thisNode().knob(\"Split_Offset\").setValue(0)" +STARTLINE}
addUserKnob {6 SplitToning_Enable l Enable -STARTLINE}
addUserKnob {7 Split_Bright_Hue l "Hue White <font color=#E6E6E6>●</font>"}
Split_Bright_Hue 0.095
addUserKnob {7 Split_Bright_Sat l "Sat  <font color=#E6E6E6>●</font>" -STARTLINE}
Split_Bright_Sat 1
addUserKnob {7 Split_Dark_Hue l "Hue Black <font color=#1A1A1A>●</font>"}
Split_Dark_Hue 0.715
addUserKnob {7 Split_Dark_Sat l "Sat <font color=#1A1A1A>●</font>" -STARTLINE}
Split_Dark_Sat 1
addUserKnob {7 Split_Contrast l "Contrast ◊"}
addUserKnob {7 Split_Offset l Offset -STARTLINE R -1 1}
addUserKnob {7 Split_Mix l "Mix ◌"}
Split_Mix 0.17
addUserKnob {26 PrimariesOffset_Devider l "<b><font color=#70EE70>Primaries Offset</font><b>"}
addUserKnob {22 Primatries_Clear l Clear T "nuke.thisNode().knob(\"Prim_HueRed\").setValue(0)\nnuke.thisNode().knob(\"Prim_HueGreen\").setValue(0)\nnuke.thisNode().knob(\"Prim_HueBlue\").setValue(0)" +STARTLINE}
addUserKnob {6 Primaries_Enable l Enable -STARTLINE}
addUserKnob {7 Prim_HueRed l "Offset Red <font color=#FF4040>●</font>" R -1 1}
addUserKnob {7 Prim_HueGreen l "Offset Green <font color=#40FF40>●</font>" R -1 1}
addUserKnob {7 Prim_HueBlue l "Offset Blue <font color=#4040FF>●</font>" R -1 1}
addUserKnob {4 PO_Method l Method M {"Color Overwrite" "Color Shift" "YCbCr Rotation" "" "" "" "" "" "" ""}}
PO_Method "Color Shift"
addUserKnob {26 ColorMixer_DEVIDER l "<b><font color=#70EE70>Color Mixer</font><b>"}
addUserKnob {22 ColorMixer_Clear l Clear T "nuke.thisNode().knob(\"RED\").setValue(\[1,0,0])\nnuke.thisNode().knob(\"Green\").setValue(\[0,1,0])\nnuke.thisNode().knob(\"Blue\").setValue(\[0,0,1])\n\n" +STARTLINE}
addUserKnob {6 ColorMixer_Enable l Enable -STARTLINE}
addUserKnob {41 RED T NoOp1.RED}
addUserKnob {41 Green l GREEN T NoOp1.Green}
addUserKnob {41 Blue l BLUE T NoOp1.Blue}
addUserKnob {20 PAGE_HUE l "Hue Corrections"}
addUserKnob {26 HueShift_DEVIDER l "<b><font color=#70EE70>Hue Shift</font><b>"}
addUserKnob {22 HueShift_Clear l Clear T "string = \"\"\"HueVsHue \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\nHueVsSat \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\nHueVsLum \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\nSatVsSat \{master L x-1 0.5 0.5 x6 0.5 K x7 0.5\}\nSatVsLum \{master L x-1 0.5 0.5 x6 0.5 K x7 0.5\}\nBlackAndWhite \{amount L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0\}\n\"\"\"\nwith nuke.thisNode():\n    nuke.toNode(\"HueKeyer2\").knob(\"lut\").fromScript(string)" +STARTLINE}
addUserKnob {6 HueShift_Enable l Enable -STARTLINE}
addUserKnob {41 lut l "" +STARTLINE T HueKeyer2.lut}
addUserKnob {26 TEEEEEEEEEEEEEEEEEEEEEEEEEEEEEST l "<b><font color=#70EE70>Settings</font><b>"}
addUserKnob {6 BW_Enable l "Enable Black and White" +STARTLINE}
addUserKnob {7 BWSoftFilter l "BW Soft Filter"}
BWSoftFilter 0.245
addUserKnob {26 soft_devider l "" +STARTLINE T "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-"}
addUserKnob {20 Vingette}
addUserKnob {26 Vingette_DEVIDER l "<b><font color=#70EE70>Vingette Add</font><b>"}
addUserKnob {22 Vingette_Clear l Clear T "nuke.thisNode().knob(\"Vin_Scale\").setValue(0.7)\nnuke.thisNode().knob(\"Vin_Feather\").setValue(0.8)\nnuke.thisNode().knob(\"Vin_Gain\").setValue(1)" +STARTLINE}
addUserKnob {6 Vingette_Enable l Enable -STARTLINE}
addUserKnob {18 Vin_Gain l Gain}
Vin_Gain 1
addUserKnob {6 Vin_Gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 Vin_Scale l Scale R 0.5 4}
Vin_Scale 0.7
addUserKnob {7 Vin_Feather l Feather}
Vin_Feather 0.8
addUserKnob {12 Vin_Offset l Center}
addUserKnob {6 Vin_HighlightPrio l "Highlight Preservation" +STARTLINE}
Vin_HighlightPrio true
addUserKnob {4 Vin_Method l "" -STARTLINE M {Straight Ease Gaussian "" ""}}
addUserKnob {7 Vin_HilightIn l In R 0 3}
addUserKnob {7 Vin_HilightOut l Out -STARTLINE R 0.5 3}
Vin_HilightOut 0.98
addUserKnob {26 VingetteOver_DEVIDER l "<b><font color=#70EE70>Vingette Over</font><b>"}
addUserKnob {22 VingetteO_Clear l Clear T "nuke.thisNode().knob(\"VinO_Scale\").setValue(0.5)\nnuke.thisNode().knob(\"VinO_Feather\").setValue(0.5)\nnuke.thisNode().knob(\"VinO_Opacity\").setValue(0)\nnuke.thisNode().knob(\"VinO_Tint\").setValue(0.5,0)\nnuke.thisNode().knob(\"VinO_Tint\").setValue(0.5,1)\nnuke.thisNode().knob(\"VinO_Tint\").setValue(0.5,2)" +STARTLINE}
addUserKnob {6 VingetteO_Enable l Enable -STARTLINE}
addUserKnob {7 VinO_Opacity l Opacity}
addUserKnob {6 VinO_Invert l Inverse -STARTLINE}
VinO_Invert true
addUserKnob {7 VinO_Scale l Scale R 0 4}
VinO_Scale 0.5
addUserKnob {7 VinO_Feather l Feather}
VinO_Feather 0.5
addUserKnob {12 VinO_Offset l Center}
addUserKnob {18 VinO_Tint l Tint R 0 2}
VinO_Tint {0.5 0.5 0.5}
addUserKnob {6 VinO_Tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
VinO_Tint_panelDropped true
addUserKnob {20 Effects}
addUserKnob {26 Sharpen_DEVIDER l "<b><font color=#70EE70>Sharpen</font><b>"}
addUserKnob {22 Sharpen_Clear l Clear T "nuke.thisNode().knob(\"Grain_Size\").setValue(1)\nnuke.thisNode().knob(\"Grain_Intensity\").setValue(0.25)" +STARTLINE}
addUserKnob {6 Sharpen_Enable l Enable -STARTLINE}
addUserKnob {7 Sharpen_1 l Sharpen}
Sharpen_1 0.4
addUserKnob {26 Grain_DEVIDER l "<b><font color=#70EE70>Grain</font><b>"}
addUserKnob {22 Grain_Clear l Clear T "nuke.thisNode().knob(\"Grain_Size\").setValue(1)\nnuke.thisNode().knob(\"Grain_Intensity\").setValue(0.25)" +STARTLINE}
addUserKnob {6 Grain_Enable l Enable -STARTLINE}
addUserKnob {7 Grain_Size l Size R 0 8}
Grain_Size 1
addUserKnob {7 Grain_Intensity l Intensity}
Grain_Intensity 0.25
addUserKnob {26 Mist_DEVIDER l "<b><font color=#70EE70>Mist</font><b>"}
addUserKnob {22 Mist_Clear l Clear T "nuke.thisNode().knob(\"Grain_Size\").setValue(1)\nnuke.thisNode().knob(\"Grain_Intensity\").setValue(0.25)" +STARTLINE}
addUserKnob {6 Mist_Enable l Enable -STARTLINE}
addUserKnob {7 Mist_Opacity l Opacity}
Mist_Opacity 0.345
addUserKnob {7 Mist_Gamma l "Selection Curve"}
Mist_Gamma 0.465
addUserKnob {7 Feather}
Feather 0.28
addUserKnob {7 Mist_ColorMix l "Color Mix"}
Mist_ColorMix 0.435
addUserKnob {6 Mist_Premultiplied l Premult -STARTLINE}
Mist_Premultiplied true
addUserKnob {20 Mask}
addUserKnob {26 Devider_Mask l Mask}
addUserKnob {41 mix -STARTLINE T Merge18.mix}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge18.invert_mask}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0xafc663ff
label Lift/Gain/Gamma
note_font_size 42
xpos 467
ypos -269
bdwidth 540
bdheight 583
}
BackdropNode {
inputs 0
name BackdropNode10
tile_color 0x6369c6ff
label "Overlay Vingette"
note_font_size 42
xpos 467
ypos 2846
bdwidth 445
bdheight 122
}
BackdropNode {
inputs 0
name BackdropNode11
tile_color 0x63c0c6ff
label "Primaries Offset"
note_font_size 42
xpos 462
ypos 1821
bdwidth 483
bdheight 276
}
BackdropNode {
inputs 0
name BackdropNode12
tile_color 0x639fc6ff
label "Two Strip (NYI)"
note_font_size 42
xpos 464
ypos 2154
bdwidth 452
bdheight 202
}
BackdropNode {
inputs 0
name BackdropNode13
tile_color 0x8863c6ff
label Mist
note_font_size 42
xpos 464
ypos 3227
bdwidth 496
bdheight 179
}
BackdropNode {
inputs 0
name BackdropNode14
tile_color 0x9763c6ff
label Grain
note_font_size 42
xpos 464
ypos 3417
bdwidth 498
bdheight 140
}
BackdropNode {
inputs 0
name BackdropNode15
tile_color 0x7363c6ff
label Sharpen
note_font_size 42
xpos 468
ypos 3034
bdwidth 500
bdheight 177
}
BackdropNode {
inputs 0
name BackdropNode16
tile_color 0x63c681ff
label "Hue Curves"
note_font_size 42
xpos 455
ypos 779
bdwidth 1236
bdheight 482
}
BackdropNode {
inputs 0
name BackdropNode17
tile_color 0xaa5555ff
label ColorMixer
note_font_size 42
xpos 489
ypos -1823
bdwidth 515
bdheight 349
}
BackdropNode {
inputs 0
name BackdropNode18
tile_color 0x71c67100
label "Preset Render Area"
note_font_size 42
xpos 1737
ypos -2009
bdwidth 399
bdheight 287
}
BackdropNode {
inputs 0
name BackdropNode19
tile_color 0x6dc663ff
label "Curves (NYI)"
note_font_size 42
xpos 464
ypos 560
bdwidth 539
bdheight 152
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0xc67a63ff
label "Black & White Mix (NYI)"
note_font_size 42
xpos 490
ypos -1447
bdwidth 517
bdheight 319
}
BackdropNode {
inputs 0
name BackdropNode20
tile_color 0xaaaaaa00
label REPLACE
note_font_size 42
xpos 956
ypos 1820
bdwidth 288
bdheight 275
}
BackdropNode {
inputs 0
name BackdropNode21
tile_color 0xaaaaaa00
label "YCbCr Rotation"
note_font_size 42
xpos 1436
ypos 1822
bdwidth 313
bdheight 272
}
BackdropNode {
inputs 0
name BackdropNode22
tile_color 0x91c663ff
label Shadow/Midtone/Highlights
note_font_size 42
xpos 465
ypos 357
bdwidth 545
bdheight 155
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x63c6a8ff
label "Split Toning"
note_font_size 42
xpos 457
ypos 1312
bdwidth 443
bdheight 365
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0xaaaaaa00
label SHIFT
note_font_size 42
xpos 1264
ypos 1821
bdwidth 158
bdheight 276
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x388e8e00
label "Used to store curves.\n(Do NOT cut and paste)"
note_font_size 20
xpos 1414
ypos 943
bdwidth 239
bdheight 159
}
BackdropNode {
inputs 0
name BackdropNode6
tile_color 0xc6bf63ff
label "Color Boost"
note_font_size 42
xpos 499
ypos -631
bdwidth 526
bdheight 261
}
BackdropNode {
inputs 0
name BackdropNode7
tile_color 0xc69563ff
label "Temperature & Tint"
note_font_size 42
xpos 499
ypos -1091
bdwidth 511
bdheight 188
}
BackdropNode {
inputs 0
name BackdropNode8
tile_color 0xc6aa63ff
label "Base Color Correction"
note_font_size 42
xpos 499
ypos -859
bdwidth 516
bdheight 182
}
BackdropNode {
inputs 0
name BackdropNode9
tile_color 0x6387c6ff
label "Gain Vingette"
note_font_size 42
xpos 467
ypos 2519
bdwidth 439
bdheight 265
}
Input {
inputs 0
name Input
xpos 509
ypos -2122
}
Dot {
name Dot47
xpos 543
ypos -2059
}
set N40440c00 [stack 0]
Shuffle {
alpha white
name Shuffle21
xpos 509
ypos -2007
}
Dot {
name Dot33
xpos 543
ypos -1708
}
set N40440400 [stack 0]
Dot {
name Dot32
xpos 749
ypos -1708
}
ColorMatrix {
matrix {
    {{(parent.NoOp1.RED.r/(parent.NoOp1.RED.r+parent.NoOp1.RED.g+parent.NoOp1.RED.b)*(parent.NoOp1.RED.r>=0?parent.NoOp1.RED.r:-parent.NoOp1.RED.r))} {(parent.NoOp1.RED.g/(parent.NoOp1.RED.r+parent.NoOp1.RED.g+parent.NoOp1.RED.b)*(parent.NoOp1.RED.g>=0?parent.NoOp1.RED.g:-parent.NoOp1.RED.g))} {(parent.NoOp1.RED.b/(parent.NoOp1.RED.r+parent.NoOp1.RED.g+parent.NoOp1.RED.b)*(parent.NoOp1.RED.b>=0?parent.NoOp1.RED.b:-parent.NoOp1.RED.b))}}
    {{(parent.NoOp1.Green.r/(parent.NoOp1.Green.r+parent.NoOp1.Green.g+parent.NoOp1.Green.b)*(parent.NoOp1.Green.r>=0?parent.NoOp1.Green.r:-parent.NoOp1.Green.r))} {(parent.NoOp1.Green.g/(parent.NoOp1.Green.r+parent.NoOp1.Green.g+parent.NoOp1.Green.b)*(parent.NoOp1.Green.g>=0?parent.NoOp1.Green.g:-parent.NoOp1.Green.g))} {(parent.NoOp1.Green.b/(parent.NoOp1.Green.r+parent.NoOp1.Green.g+parent.NoOp1.Green.b)*(parent.NoOp1.Green.b>=0?parent.NoOp1.Green.b:-parent.NoOp1.Green.b))}}
    {{(parent.NoOp1.Blue.r/(parent.NoOp1.Blue.r+parent.NoOp1.Blue.g+parent.NoOp1.Blue.b)*(parent.NoOp1.Blue.r>=0?parent.NoOp1.Blue.r:-parent.NoOp1.Blue.r))} {(parent.NoOp1.Blue.g/(parent.NoOp1.Blue.r+parent.NoOp1.Blue.g+parent.NoOp1.Blue.b)*(parent.NoOp1.Blue.g>=0?parent.NoOp1.Blue.g:-parent.NoOp1.Blue.g))} {(parent.NoOp1.Blue.b/(parent.NoOp1.Blue.r+parent.NoOp1.Blue.g+parent.NoOp1.Blue.b)*(parent.NoOp1.Blue.b>=0?parent.NoOp1.Blue.b:-parent.NoOp1.Blue.b))}}
  }
name ColorMatrix3
xpos 715
ypos -1633
}
set N4067bc00 [stack 0]
Expression {
expr0 isnan(r)==1?0:r
expr1 isnan(g)==1?0:g
expr2 isnan(b)==1?0:b
name Expression3
xpos 715
ypos -1530
}
push $N40440400
Switch {
inputs 2
which {{parent.ColorMixer_Enable}}
name Switch1
xpos 509
ypos -1530
}
Dot {
name Dot12
xpos 543
ypos -1354
}
set N4067b000 [stack 0]
Dot {
name Dot13
xpos 814
ypos -1354
}
Saturation {
saturation 0
mode Maximum
name Saturation1
xpos 780
ypos -1250
}
set N4067a800 [stack 0]
Dot {
name Dot14
xpos 814
ypos -1153
}
push $N4067a800
ColorLookup {
lut {master {curve C x0.008857131004 0 s0.400000006 v1.05014801 L x0.7664735317 1 s0.5 t0 u1.130736947}
  red {}
  green {}
  blue {}
  alpha {}}
name ColorLookup1
xpos 678
ypos -1250
}
Shuffle {
green red
blue red
alpha red
name Shuffle3
xpos 678
ypos -1224
}
push $N4067b000
HueKeyer {
lut {amount {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  sat_thrsh {curve 0}}
invert false
name BlackAndWhite
xpos 509
ypos -1331
disable {{1-parent.BW_Enable}}
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle2
xpos 509
ypos -1285
disable {{1-parent.BW_Enable}}
}
set N78cc9400 [stack 0]
Shuffle {
red white
green white
blue white
alpha white
name Shuffle4
xpos 619
ypos -1285
}
Dot {
name Dot15
xpos 653
ypos -1252
}
push $N78cc9400
Blur {
size {{75*parent.BWSoftFilter}}
filter box
quality 2
name Blur2
xpos 509
ypos -1259
disable {{1-parent.BW_Enable}}
}
Merge2 {
inputs 2+1
maskChannelMask rgba.red
name Merge1
xpos 509
ypos -1224
disable {{1-parent.BW_Enable}}
}
set N78cc8400 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge4
xpos 509
ypos -1157
disable {{1-parent.BW_Enable}}
}
Colorspace {
colorspace_out CIE-XYZ
name Colorspace3
selected true
xpos 509
ypos -1011
disable {{parent.Temperature==1?parent.Tint==1?1:0:0}}
}
Grade {
white {1 {parent.Tint*0.1+0.9} {parent.Temperature*0.5+0.5} 1}
black_clamp false
name Grade2
xpos 509
ypos -972
disable {{parent.Colorspace3.disable}}
}
set Ncc77d800 [stack 0]
Colorspace {
colorspace_in CIE-XYZ
name Colorspace7
xpos 509
ypos -933
disable {{parent.Colorspace3.disable}}
}
Saturation {
saturation {{parent.Saturation}}
name Saturation2
xpos 509
ypos -795
}
Grade {
black_clamp false
name BaseGrade
xpos 509
ypos -769
}
set Ncc77cc00 [stack 0]
EXPTool {
mode Stops
name Exposure1
xpos 509
ypos -743
}
RolloffContrast {
contrast {{parent.Contrast}}
soft_clip 0.5
slope_mag_low1 0.5
slope_mag_high2 0.5
name RolloffContrast1
xpos 509
ypos -710
disable {{parent.Contrast==1?1:0}}
}
Dot {
name Dot55
xpos 543
ypos -576
}
set Ncc77c000 [stack 0]
Colorspace {
colorspace_out HSV
name Colorspace1
xpos 509
ypos -558
disable {{parent.ColorBoost==1?1:0}}
}
Grade {
channels {-rgba.red rgba.green -rgba.blue none}
gamma {{parent.ColorBoost}}
black_clamp false
name Grade4
xpos 509
ypos -532
disable {{parent.ColorBoost==1?1:0}}
}
set Nd042b800 [stack 0]
Dot {
name Dot9
xpos 424
ypos -528
}
push $Ncc77d800
Dot {
name Dot11
xpos 428
ypos -968
}
push $N78cc8400
Dot {
name Dot16
xpos 438
ypos -1220
}
StickyNote {
inputs 0
name StickyNote10
label "<center>Black and White Mix\n"
xpos 335
ypos -1233
}
push $Ncc77c000
Dot {
name Dot56
xpos 637
ypos -576
}
Colorspace {
colorspace_out YCbCr
name Colorspace13
xpos 603
ypos -454
disable {{parent.ColorBoost==1?1:0}}
}
push $Nd042b800
Colorspace {
colorspace_in HSV
name Colorspace2
xpos 509
ypos -506
disable {{parent.ColorBoost==1?1:0}}
}
Colorspace {
colorspace_out YCbCr
name Colorspace14
xpos 509
ypos -480
disable {{parent.ColorBoost==1?1:0}}
}
ShuffleCopy {
inputs 2
red red
alpha alpha2
name ShuffleCopy2
xpos 509
ypos -454
disable {{parent.ColorBoost==1?1:0}}
}
Colorspace {
colorspace_in YCbCr
name Colorspace15
xpos 509
ypos -428
disable {{parent.ColorBoost==1?1:0}}
}
Dot {
name Dot53
xpos 543
ypos -195
}
set Nd1b90c00 [stack 0]
OCIOColorSpace {
in_colorspace linear
out_colorspace Gamma2.2
name OCIOColorSpace1
xpos 509
ypos -123
}
set Nd1b90800 [stack 0]
Dot {
name Dot4
xpos 772
ypos -119
}
Grade {
black {{parent.LiftEnabled?parent.Lift.a-1:0}}
white {{parent.GainEnabled?parent.Gain.a:1}}
gamma {{parent.GammaEnabled?parent.Gamma.a:1}}
black_clamp false
name LuminanceMod
xpos 738
ypos -17
}
OCIOColorSpace {
in_colorspace {{parent.OCIOColorSpace1.out_colorspace}}
out_colorspace linear
name OCIOColorSpace3
xpos 738
ypos 47
}
Colorspace {
colorspace_out YCbCr
name Colorspace5
xpos 738
ypos 73
}
Shuffle {
alpha white
name Shuffle23
xpos 738
ypos 155
}
push $Nd1b90800
Grade {
black {{parent.LiftEnabled?((parent.Lift.r-((parent.Lift.r+parent.Lift.g+parent.Lift.b)/3))*1)+(parent.Lift.a)-1:0} {parent.LiftEnabled?((parent.Lift.g-((parent.Lift.r+parent.Lift.g+parent.Lift.b)/3))*1)+(parent.Lift.a)-1:0} {parent.LiftEnabled?((parent.Lift.b-((parent.Lift.r+parent.Lift.g+parent.Lift.b)/3))*1)+(parent.Lift.a)-1:0} 1}
white {{parent.GainEnabled?((parent.Gain.r-((parent.Gain.r+parent.Gain.g+parent.Gain.b)/3))*1)+(parent.Gain.a):1} {parent.GainEnabled?((parent.Gain.g-((parent.Gain.r+parent.Gain.g+parent.Gain.b)/3))*1)+(parent.Gain.a):1} {parent.GainEnabled?((parent.Gain.b-((parent.Gain.r+parent.Gain.g+parent.Gain.b)/3))*1)+(parent.Gain.a):1} {curve}}
gamma {{parent.GammaEnabled?((parent.Gamma.r-((parent.Gamma.r+parent.Gamma.g+parent.Gamma.b)/3))*1)+(parent.Gamma.a):1} {parent.GammaEnabled?((parent.Gamma.g-((parent.Gamma.r+parent.Gamma.g+parent.Gamma.b)/3))*1)+(parent.Gamma.a):1} {parent.GammaEnabled?((parent.Gamma.b-((parent.Gamma.r+parent.Gamma.g+parent.Gamma.b)/3))*1)+(parent.Gamma.a):1} {curve}}
black_clamp false
name Grade1
xpos 510
ypos -18
}
OCIOColorSpace {
in_colorspace {{parent.OCIOColorSpace1.out_colorspace}}
out_colorspace linear
name OCIOColorSpace2
xpos 510
ypos 25
}
Colorspace {
colorspace_out YCbCr
name Colorspace4
xpos 510
ypos 101
disable {{parent.LumaMix==0?1:0}}
}
Merge2 {
inputs 2
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
mix {{parent.LumaMix}}
name Merge2
xpos 510
ypos 149
}
Colorspace {
colorspace_in YCbCr
name Colorspace6
xpos 510
ypos 210
disable {{parent.LumaMix==0?1:0}}
}
push $Nd1b90c00
Dot {
name Dot54
xpos 481
ypos -195
}
Dot {
name Dot52
xpos 481
ypos 294
}
Switch {
inputs 2
which {{parent.liftgammagain_Enable}}
name Switch4
xpos 509
ypos 290
}
ColorCorrect {
shadows.gain {{((parent.Shadows.r-((parent.Shadows.r+parent.Shadows.g+parent.Shadows.b)/3))*2)+(parent.Shadows.a)} {((parent.Shadows.g-((parent.Shadows.r+parent.Shadows.g+parent.Shadows.b)/3))*2)+(parent.Shadows.a)} {((parent.Shadows.b-((parent.Shadows.r+parent.Shadows.g+parent.Shadows.b)/3))*2)+(parent.Shadows.a)} 1}
midtones.gain {{((parent.Midtones.r-((parent.Midtones.r+parent.Midtones.g+parent.Midtones.b)/3))*1)+(parent.Midtones.a)} {((parent.Midtones.g-((parent.Midtones.r+parent.Midtones.g+parent.Midtones.b)/3))*1)+(parent.Midtones.a)} {((parent.Midtones.b-((parent.Midtones.r+parent.Midtones.g+parent.Midtones.b)/3))*1)+(parent.Midtones.a)} 1}
highlights.gain {{((parent.Highlights.r-((parent.Highlights.r+parent.Highlights.g+parent.Highlights.b)/3))*2)+(parent.Highlights.a)} {((parent.Highlights.g-((parent.Highlights.r+parent.Highlights.g+parent.Highlights.b)/3))*2)+(parent.Highlights.a)} {((parent.Highlights.b-((parent.Highlights.r+parent.Highlights.g+parent.Highlights.b)/3))*2)+(parent.Highlights.a)} 1}
lookup {shadow {curve 1 s0 x0.5 0 s0}
  midtone {1-shadow-highlight}
  highlight {}}
name BaseColorCorrect
knobChanged RunNodeC()
xpos 509
ypos 434
disable {{1-parent.SMH_Enable}}
addUserKnob {20 User}
addUserKnob {22 RunThis T "def RunNodeC():\n\tif nuke.thisKnob().Class() == \"Array_Knob\":\n\t\t\tthisNode = nuke.thisNode().fullName().split(\".\")\[-2]\n\t\t\twith nuke.Root():\n\t\t\t\tinputNode = nuke.toNode(thisNode)\n\t\t\t#nuke.message( inputNode)\n\t\t\twith inputNode:\n\t\t\t\tshadowval = nuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"low\").value()\n\t\t\t\thighlightval = nuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"High\").value()\n\t\t\t\tcurve = nuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"lookup\").toScript()\n\t\t\t\tmyCurve = curve.splitlines()\[0]\n\t\t\t\tmyCurve = \"shadow \{curve 1 s0 x0.5 0 s0\}\"\n\t\t\t\tmyCurve = myCurve.replace(myCurve.split(\" \")\[4]\[1:],str(shadowval))\n\t\t\t\tnuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"lookup\").editCurve(\"shadow\",myCurve.replace(\"shadow\",\"curve\")\[7:-1])\n\t\t\t\tmyCurve = curve.splitlines()\[2]\n\t\t\t\tmyCurve = \"highlight \{curve x0.5 0 s0 x1 1 s0\}\"\n\t\t\t\tmyCurve = myCurve.replace(myCurve.split(\" \")\[2]\[1:],str(highlightval))\n\t\t\t\tnuke.toNode(inputNode.name()+\".BaseColorCorrect\").knob(\"lookup\").editCurve(\"highlight\",myCurve.replace(\"highlight\",\"curve\")\[7:-1])\nnuke.toNode(\"BaseColorCorrect\").knob('knobChanged').setValue(\"RunNodeC()\")\n" +STARTLINE}
addUserKnob {7 low l Low}
low 0.5
addUserKnob {7 High}
High 0.5
}
ColorLookup {
name ColorLookup2
xpos 509
ypos 660
disable true
}
Dot {
name Dot34
xpos 543
ypos 857
}
set Nd7622c00 [stack 0]
Dot {
name Dot5
xpos 694
ypos 857
}
set Nd7622800 [stack 0]
Colorspace {
colorspace_out HSL
name Hue_HSL_To
xpos 660
ypos 888
}
set Nd7622400 [stack 0]
Grade {
multiply 6
black_clamp false
name Grade8
xpos 1064
ypos 888
}
Dot {
name Dot39
xpos 1174
ypos 892
}
set Nd7d7dc00 [stack 0]
Dot {
name Dot40
xpos 1284
ypos 892
}
Shuffle {
red blue
green blue
alpha blue
name Shuffle17
xpos 1250
ypos 934
}
ColorLookup {
lut {master {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
  red {}
  green {}
  blue {}
  alpha {}}
name SatVsLum
xpos 1250
ypos 960
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle18
xpos 1250
ypos 986
}
Grade {
channels rgba
multiply 2
black_clamp false
name Grade9
xpos 1250
ypos 1012
}
Dot {
name Dot38
xpos 1284
ypos 1164
}
push $Nd7d7dc00
Shuffle {
red green
blue green
alpha green
name Shuffle16
xpos 1140
ypos 934
}
ColorLookup {
lut {master {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
  red {}
  green {}
  blue {}
  alpha {}}
name SatVsSat
xpos 1140
ypos 960
}
Shuffle {
green red
blue red
alpha red
name Shuffle19
xpos 1140
ypos 986
}
Grade {
channels rgba
multiply 2
black_clamp false
name Grade11
xpos 1140
ypos 1012
}
Dot {
name Dot41
xpos 1174
ypos 1138
}
push $Nd7622800
Dot {
name Dot36
xpos 804
ypos 857
}
set Ne41d4c00 [stack 0]
Dot {
name Dot42
xpos 914
ypos 857
}
set Ne41d4800 [stack 0]
Dot {
name Dot43
xpos 1024
ypos 857
}
HueKeyer {
lut {amount {curve i L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  sat_thrsh {curve 0 x6 0 s0}}
invert false
name HueVsLum
xpos 990
ypos 939
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle20
xpos 990
ypos 977
}
Grade {
multiply 2
black_clamp false
name Grade12
xpos 990
ypos 1003
}
Dot {
name Dot45
xpos 1024
ypos 1106
}
push $Ne41d4800
HueKeyer {
lut {amount {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  sat_thrsh {}}
invert false
name HueVsSat
xpos 880
ypos 939
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle15
xpos 880
ypos 977
}
Grade {
multiply 2
black_clamp false
name Grade10
xpos 880
ypos 1003
}
Dot {
name Dot44
xpos 914
ypos 1068
}
push $Nd7622400
push $Ne41d4c00
HueKeyer {
lut {amount {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  sat_thrsh {curve 0 x6 0 s0}}
invert false
name HueVsHue
xpos 770
ypos 913
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle14
xpos 770
ypos 951
}
MergeExpression {
inputs 2
expr0 ((B.Red-0.5)*((A.Blue*2)-0.5))+0.5
name MergeExpression1
xpos 770
ypos 977
disable true
}
Grade {
channels rgba
add 0.5
black_clamp false
name Grade7
xpos 770
ypos 1003
}
Dot {
name Dot46
xpos 804
ypos 1036
}
push $Nd7622400
Merge2 {
inputs 2
operation plus
Achannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
name Merge13
xpos 660
ypos 1032
}
Merge2 {
inputs 2
operation multiply
Achannels {-rgba.red rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red rgba.green -rgba.blue rgba.alpha}
output {-rgba.red rgba.green -rgba.blue rgba.alpha}
name Merge16
xpos 660
ypos 1058
}
Merge2 {
inputs 2
operation multiply
Achannels {-rgba.red -rgba.green rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green rgba.blue rgba.alpha}
output {-rgba.red -rgba.green rgba.blue rgba.alpha}
name Merge17
xpos 660
ypos 1096
}
Merge2 {
inputs 2
operation multiply
Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
name Merge15
xpos 660
ypos 1134
}
Merge2 {
inputs 2
operation multiply
Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
name Merge14
xpos 660
ypos 1160
}
Colorspace {
colorspace_in HSL
name Hue_HSL_From
xpos 660
ypos 1186
}
Dot {
name Dot37
xpos 694
ypos 1223
}
push $Nd7622c00
Switch {
inputs 2
which {{parent.HueShift_Enable}}
name Switch3
xpos 509
ypos 1219
}
Dot {
name Dot17
xpos 543
ypos 1372
}
set N3619ec00 [stack 0]
Colorspace {
colorspace_out HSL
name Colorspace8
xpos 709
ypos 1368
}
set N3619e800 [stack 0]
Dot {
name Dot18
xpos 837
ypos 1459
}
Grade {
white {{1+(parent.Split_Contrast/2)}}
add {{parent.Split_Offset}}
gamma {{1-(parent.Split_Contrast/2)}}
black_clamp false
name Grade3
xpos 803
ypos 1631
}
Shuffle {
name Shuffle9
xpos 711
ypos 1631
}
push $N3619e800
Expression {
expr0 parent.Split_Bright_Hue
expr1 parent.Split_Bright_Sat
name Expression5
xpos 709
ypos 1434
}
Colorspace {
colorspace_in HSL
name Colorspace9
xpos 709
ypos 1513
}
Shuffle {
alpha white
name Shuffle1
xpos 709
ypos 1539
}
push $N3619e800
Expression {
expr0 parent.Split_Dark_Hue
expr1 parent.Split_Dark_Sat
name Expression6
xpos 601
ypos 1435
}
Colorspace {
colorspace_in HSL
name Colorspace10
xpos 601
ypos 1514
}
Shuffle {
alpha white
name Shuffle5
xpos 601
ypos 1540
}
Merge2 {
inputs 2+1
maskChannelMask rgba.blue
name Merge5
xpos 601
ypos 1631
}
push $N3619ec00
Merge2 {
inputs 2
mix {{parent.Split_Mix}}
name Merge6
xpos 509
ypos 1631
disable {{1-parent.SplitToning_Enable}}
}
set N403cd400 [stack 0]
Dot {
name Dot19
xpos 391
ypos 1635
}
StickyNote {
inputs 0
name StickyNote11
label "<center>Split Toning\n"
xpos 322
ypos 1621
}
push $N403cd400
Dot {
name Dot20
xpos 543
ypos 1900
}
set N403cc800 [stack 0]
Dot {
name Dot58
xpos 1059
ypos 1900
}
set N403cc400 [stack 0]
Dot {
name Dot21
xpos 1177
ypos 1900
}
set N403cc000 [stack 0]
Dot {
name Dot57
xpos 1349
ypos 1900
}
set N78643c00 [stack 0]
Dot {
name Dot60
xpos 1588
ypos 1900
}
Colorspace {
colorspace_out YCbCr
name Colorspace16
xpos 1554
ypos 1931
}
Expression {
temp_name0 cosThetaB
temp_expr0 "cos((RotationB+180) * (PI / 180))"
temp_name1 sinThetaB
temp_expr1 "sin((RotationB+180) * (PI / 180))"
temp_name2 cosTheta
temp_expr2 "cos(Rotation * (PI / 180))"
temp_name3 sinTheta
temp_expr3 "sin(Rotation * (PI / 180))"
expr1 "(cosTheta * (g - 0.5) - sinTheta * (b - 0.5) + 0.5)"
expr2 "(sinThetaB * (g - 0.5) - cosThetaB * (b - 0.5) + 0.5)"
name Expression7
xpos 1554
ypos 1957
addUserKnob {20 User}
addUserKnob {7 Rotation R -180 180}
Rotation {{180*parent.Prim_HueRed}}
addUserKnob {7 RotationB R -180 180}
RotationB {{180*parent.Prim_HueGreen}}
}
Colorspace {
colorspace_in YCbCr
name Colorspace17
xpos 1554
ypos 1983
}
Dot {
name Dot61
xpos 1588
ypos 2063
}
push $N78643c00
ColorMatrix {
matrix {
    {{(1+(parent.Prim_HueBlue))+(parent.Prim_HueGreen)} {-parent.Prim_HueGreen} {-parent.Prim_HueBlue}}
    {{parent.Prim_HueRed} {(1+(-parent.Prim_HueBlue))-(parent.Prim_HueRed)} {parent.Prim_HueBlue}}
    {{-parent.Prim_HueRed} {parent.Prim_HueGreen} {(1+(-parent.Prim_HueGreen))+parent.Prim_HueRed}}
  }
name ShiftMatrix
label "Custom Recipe \nBy Mads Hagbarth Lund"
note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 9
xpos 1315
ypos 1965
}
Dot {
name Dot59
xpos 1349
ypos 2025
}
push $N403cc000
Keyer {
invert true
operation "luminance key"
range {0.5795876367 1 1 1}
name Keyer1
xpos 1143
ypos 1971
}
push $N403cc400
ColorMatrix {
inputs 1+1
matrix {
    {1 {parent.Prim_HueGreen} {-parent.Prim_HueBlue}}
    {{-parent.Prim_HueRed} 1 {parent.Prim_HueBlue}}
    {{parent.Prim_HueRed} {-parent.Prim_HueGreen} 1}
  }
name ReplaceMatrix
label "Custom Recipe \nBy Mads Hagbarth Lund"
note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 9
xpos 1025
ypos 1964
}
Switch {
inputs 3
which {{parent.PO_Method}}
name Switch7
xpos 722
ypos 2059
}
push $N403cc800
Switch {
inputs 2
which {{parent.Primaries_Enable}}
name Switch6
xpos 511
ypos 2059
}
set Nb73e8400 [stack 0]
Dot {
name Dot23
xpos 543
ypos 2218
}
set N78869000 [stack 0]
Dot {
name Dot24
xpos 643
ypos 2218
}
set N78868c00 [stack 0]
Shuffle {
blue green
alpha white
name Shuffle6
xpos 719
ypos 2214
}
push $N78868c00
Shuffle {
green blue
alpha white
name Shuffle7
xpos 609
ypos 2256
}
Merge2 {
inputs 2
mix 0.445
name Merge7
xpos 719
ypos 2256
}
push $N78868c00
Merge2 {
inputs 2
mix 0.6
name Merge8
xpos 719
ypos 2299
}
push $N78869000
AddMix {
inputs 2
mix {{parent.Split_Mix}}
name AddMix1
xpos 509
ypos 2299
disable true
}
set N78cbb800 [stack 0]
Dot {
name Dot25
xpos 374
ypos 2303
}
StickyNote {
inputs 0
name StickyNote13
label "<center>Two Strip\n"
xpos 305
ypos 2289
}
StickyNote {
inputs 0
name StickyNote9
label "<center>Converting to CIE-XYZ\nfor control.\nWill disable if values are default"
xpos 268
ypos -979
}
push $Nb73e8400
Dot {
name Dot22
xpos 379
ypos 2063
}
StickyNote {
inputs 0
name StickyNote12
label "<center>Prim Offset\nFor post balancing\n"
xpos 310
ypos 2049
}
push $N40440c00
Dot {
name Dot49
xpos 95
ypos -2059
}
Dot {
name Dot48
xpos 95
ypos 3790
}
Dot {
name Dot50
xpos 453
ypos 3790
}
set Nca1c1800 [stack 0]
Input {
inputs 0
name Mask
xpos 748
ypos 3786
number 1
}
push $N78cbb800
Dot {
name Dot26
xpos 543
ypos 2455
}
set Nca1c1000 [stack 0]
Shuffle {
red black
green black
blue black
alpha black
name Shuffle8
xpos 742
ypos 2451
}
Dot {
name Dot27
xpos 924
ypos 2455
}
Dot {
name Dot28
xpos 924
ypos 2718
}
set Nca1c0400 [stack 0]
Dot {
name Dot29
xpos 924
ypos 2915
}
Radial {
invert {{parent.VinO_Invert}}
area {{((width/2)-(width*parent.VinO_Scale))+(width*((VinO_Offset.x)/1000))} {((height/2)-(height*parent.VinO_Scale))+(height*((VinO_Offset.y)/1000))} {((width/2)+(width*parent.VinO_Scale))+(width*((VinO_Offset.x)/1000))} {((height/2)+(height*parent.VinO_Scale))+(height*((VinO_Offset.y)/1000))}}
softness {{parent.VinO_Feather}}
color {{parent.VinO_Tint} {parent.VinO_Tint} {parent.VinO_Tint} {parent.VinO_Tint}}
name Radial2
xpos 737
ypos 2911
}
push $Nca1c1000
Dot {
name Dot30
xpos 543
ypos 2596
}
set Ncb50b800 [stack 0]
Keyer {
invert true
operation "luminance key"
range {{parent.Vin_HilightIn} {parent.Vin_HilightOut} 999999 999999}
name Keyer2
xpos 636
ypos 2586
}
set Ncb50b400 [stack 0]
Expression {
expr3 "( 1- exp( -4 * pow2(a)) ) * 1.018657"
name Expression1
xpos 713
ypos 2634
}
push $Ncb50b400
Expression {
expr3 "0.5 - 0.5 * cos( a * pi )"
name Expression2
xpos 565
ypos 2629
}
push $Ncb50b400
Switch {
inputs 3
which {{parent.Vin_Method}}
name Switch2
xpos 636
ypos 2672
}
push $Nca1c0400
Radial {
invert true
area {{((width/2)-(width*parent.Vin_Scale))+(width*((Vin_Offset.x)/1000))} {((height/2)-(height*parent.Vin_Scale))+(width*((Vin_Offset.y)/1000))} {((width/2)+(width*parent.Vin_Scale))+(width*((Vin_Offset.x)/1000))} {((height/2)+(height*parent.Vin_Scale))+(width*((Vin_Offset.y)/1000))}}
softness {{parent.Vin_Feather}}
name Radial1
xpos 740
ypos 2714
}
Merge2 {
inputs 2
operation multiply
mix 0.085
name Merge9
xpos 636
ypos 2714
disable {{1-parent.Vin_HighlightPrio}}
}
push $Ncb50b800
Grade {
inputs 1+1
white {{parent.Vin_Gain}}
black_clamp false
name Grade5
xpos 509
ypos 2714
disable {{1-parent.Vingette_Enable x1 1}}
}
Merge2 {
inputs 2
mix {{parent.VinO_Opacity/3}}
name Merge10
xpos 509
ypos 2911
disable {{1-parent.VingetteO_Enable}}
}
Clamp {
maximum_enable false
name Clamp1
xpos 509
ypos 3049
disable {{parent.Sharpen1.disable}}
}
Colorspace {
colorspace_out Cineon
name Colorspace18
xpos 509
ypos 3087
disable {{parent.Sharpen1.disable}}
}
Colorspace {
colorspace_out YCbCr
name Colorspace11
xpos 509
ypos 3113
disable {{parent.Sharpen1.disable}}
}
Sharpen {
channels {rgba.red -rgba.green -rgba.blue none}
amount {{parent.Sharpen_1*6}}
name Sharpen1
xpos 509
ypos 3139
disable {{1-parent.Sharpen_Enable}}
}
Colorspace {
colorspace_in YCbCr
name Colorspace12
xpos 509
ypos 3165
disable {{parent.Sharpen1.disable}}
}
Colorspace {
colorspace_in Cineon
name Colorspace19
xpos 509
ypos 3191
disable {{parent.Sharpen1.disable}}
}
Dot {
name Dot35
xpos 543
ypos 3257
}
set Ncf9bd800 [stack 0]
Keyer {
operation "luminance key"
name Keyer3
xpos 636
ypos 3247
}
Premult {
name Premult1
xpos 636
ypos 3281
disable {{1-parent.Mist_Premultiplied}}
}
Grade {
channels rgba
gamma {{parent.Mist_Gamma}}
black_clamp false
name Grade6
xpos 636
ypos 3307
}
Blur {
size {{(parent.Feather+0.3)*1000}}
name Blur1
xpos 636
ypos 3332
}
Expression {
expr0 a
expr1 a
expr2 a
mix {{1-parent.Mist_ColorMix}}
name Expression8
xpos 636
ypos 3370
}
push $Ncf9bd800
Merge2 {
inputs 2
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
output {rgba.red rgba.green rgba.blue -rgba.alpha}
mix {{parent.Mist_Opacity}}
name Merge12
xpos 509
ypos 3370
disable {{1-parent.Mist_Enable}}
}
Group {
name Grain
help "Adds synthetic grain. Push \"presets\" to get predefined types of grain, these are the correct size for 2K scans.\n\nYou can also adjust the sliders to match a sample piece of grain. Find a sample with a rather constant background, blur it to remove the grain, and use as input to this. View with a wipe in the viewer so you can make a match. It helps to view and match each of the red, green, blue separately."
xpos 509
ypos 3487
disable {{1-parent.Grain_Enable}}
addUserKnob {20 "" l User}
addUserKnob {3 seed t "Change this value to make different instances of this operator produce different noise"}
seed 134
addUserKnob {35 presets l "" -STARTLINE M {"presets/Kodak 5248" "knobs this \{red_size 3.30 green_size 2.90 blue_size 2.5 red_i 0.60 green_i 0.60 blue_i 0.60 red_m 0.42 green_m 0.46 blue_m 0.85 black 0.00 label \{Kodak 5248\}\}" "presets/Kodak 5279" "knobs this \{red_size 2.70 green_size 2.60 blue_size 2.40 red_i 1.00 green_i 0.76 blue_i 0.65 red_m 0.37 green_m 0.60 blue_m 1.65 black 0.00 label \{Kodak 5279\}\}" "presets/Kodak FX214" "knobs this \{red_size 1.87 green_size 2.60 blue_size 2.44 red_i 1 green_i 0.76 blue_i 0.79 red_m 0.41 green_m 0.60 blue_m 1.80 black 0.00 label \{Kodak FX214\}\}" "presets/Kodak GT5274" "knobs this \{red_size 0.04 green_size 0.10 blue_size 0.90 red_i 0.90 green_i 0.76 blue_i 0.81 red_m 0.49 green_m 0.50 blue_m 1.55 black 0.00 label \{Kodak GT5274\}\}" "presets/Kodak 5217" "knobs this \{red_size 0.23 green_size 1.20 blue_size 1.40 red_i 0.60 green_i 0.86 blue_i 0.60 red_m 0.48 green_m 0.42 blue_m 0.87 black 0.00 label \{Kodak 5217\}\}" "presets/Kodak 5218" "knobs this \{red_size 0.10 green_size 1.60 blue_size 1.91 red_i 0.60 green_i 0.86 blue_i 0.73 red_m 0.38 green_m 0.17 blue_m 0.87 black 0.00 label \{Kodak 5218\}\}" presets/other "knobs this \{label other\}"}}
addUserKnob {26 "" l "@b;Size"}
addUserKnob {14 red_size l red R 0 100}
red_size {{parent.Grain_Size}}
addUserKnob {14 green_size l green R 0 100}
green_size {{parent.Grain_Size}}
addUserKnob {14 blue_size l blue R 0 100}
blue_size {{parent.Grain_Size}}
addUserKnob {26 "" l "@b;Irregularity"}
addUserKnob {7 red_i l red}
red_i 0.6
addUserKnob {7 green_i l green}
green_i 0.6
addUserKnob {7 blue_i l blue}
blue_i 0.6
addUserKnob {26 "" l "@b;Intensity"}
addUserKnob {7 red_m l red t "Amount of grain to add to a white pixel"}
red_m {{parent.Grain_Intensity}}
addUserKnob {7 green_m l green}
green_m {{parent.Grain_Intensity}}
addUserKnob {7 blue_m l blue}
blue_m {{parent.Grain_Intensity}}
addUserKnob {18 black t "Amount of grain to add everywhere"}
black {0 0 0}
addUserKnob {6 black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 minimum t "Minimum black level" R 0 0.01}
minimum {0 0 0}
addUserKnob {6 minimum_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 "" l "@b;Mask"}
addUserKnob {6 maskgrain l "Apply only through alpha" -STARTLINE}
addUserKnob {41 maskinvert l "Invert alpha" -STARTLINE T Copy1.invert_mask}
}
Input {
inputs 0
name Input1
xpos 0
}
set Nd043f800 [stack 0]
Noise {
output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
cliptype none
replace true
size {{parent.red_size.w} {parent.red_size.h}}
zoffset {{frame+seed+red_i/2}}
octaves 2
gamma 1
xrotate {{red_i*45}}
yrotate {{red_i*45}}
name red
xpos 220
}
Noise {
output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
cliptype none
replace true
size {{parent.green_size.w} {parent.green_size.h}}
zoffset {{frame+2*seed+green_i/2}}
octaves 2
gamma 1
xrotate {{green_i*45}}
yrotate {{green_i*45}}
name green
xpos 220
ypos 43
}
Noise {
output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
cliptype none
replace true
size {{parent.blue_size.w} {parent.blue_size.h}}
zoffset {{frame+3*seed+blue_i/2}}
octaves 2
gamma 1
xrotate {{blue_i*45}}
yrotate {{blue_i*45}}
name blue
xpos 220
ypos 86
}
Saturation {
saturation 0
name Saturation1
xpos 220
ypos 112
}
push $Nd043f800
MergeExpression {
inputs 2
expr0 max(minimum.r,r+(2*Ar-1)*(r*red_m+black.r))
expr1 max(minimum.g,g+(2*Ag-1)*(g*green_m+black.g))
expr2 max(minimum.b,b+(2*Ab-1)*(b*blue_m+black.b))
name MergeExpression1
xpos 220
ypos 208
}
set Nd043e400 [stack 0]
push $Nd043f800
Copy {
inputs 2
channels rgb
maskChannelInput rgba.alpha
name Copy1
xpos 0
ypos 154
}
push $Nd043e400
Switch {
inputs 2
which {{maskgrain}}
name Switch1
xpos 0
ypos 241
}
Output {
name Output1
xpos 0
ypos 286
}
end_group
Shuffle {
alpha white
name Shuffle22
xpos 509
ypos 3714
}
push $Nca1c1800
Merge2 {
inputs 2+1
name Merge18
xpos 509
ypos 3786
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos 509
ypos 3855
}
Dot {
name Dot31
xpos 543
ypos 3969
}
Output {
name Output1
xpos 509
ypos 4133
}
StickyNote {
inputs 0
name StickyNote15
tile_color 0xff3100ff
gl_color 0xff0000ff
label "<center>IS THIS CORRECT?"
note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 20
xpos 804
ypos -940
}
push $N40440c00
Dot {
name Dot51
xpos 1927
ypos -2059
}
Reformat {
format "160 90 0 0 160 90 1 Thumbnail"
resize fill
black_outside true
name Reformat1
xpos 1893
ypos -1936
}
Write {
file "C:/Users/Mads/.nuke/LUE/Standard Looks/Black and White/Navy.jpg"
file_type jpeg
checkHashOnRead false
version 1805
in_colorspace linear
out_colorspace linear
name Write1
xpos 1893
ypos -1797
}
StickyNote {
inputs 0
name StickyNote14
tile_color 0xff0000ff
gl_color 0xff0000ff
label "<center>FIX \n-CONNECTION ISSUE\n-UI\n-BUTTONS"
xpos 1987
ypos -1870
}
push $Ncc77cc00
Dot {
name Dot10
xpos 428
ypos -765
}
StickyNote {
inputs 0
name StickyNote8
label "<center>Base Color Correction\nfor normalizing shot."
xpos 318
ypos -776
}
StickyNote {
inputs 0
name StickyNote16
tile_color 0xff3100ff
gl_color 0xff0000ff
label "<center>REDO THIS"
note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
note_font_size 20
xpos 771
ypos 1310
}
HueKeyer {
inputs 0
lut {HueVsHue {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  HueVsSat {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  HueVsLum {curve i L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}
  SatVsSat {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
  SatVsLum {curve L x-1 0.5 0.5 x6 0.5 K x7 0.5}
  BlackAndWhite {curve L 0.5 s0 0.5 s-0 t0 0.5 s0 0.5 s0 0.5 s0 0.5 s0 0.5 s0}}
name HueKeyer2
knobChanged RunNode()
xpos 1499
ypos 1036
}
StickyNote {
inputs 0
name StickyNote1
label "Temporary, remove later->"
xpos 330
ypos 3054
}
StickyNote {
inputs 0
name StickyNote7
label "<center>Color Boost\nIntroduce saturation in\nless saturated areas\n(should be reduced)"
xpos 313
ypos -540
}
push $N4067bc00
Viewer {
frame_range 1-165
name Viewer1
xpos 797
ypos -1564
}
NoOp {
inputs 0
name NoOp1
xpos 815
ypos -1634
addUserKnob {20 User}
addUserKnob {6 Green_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
Green_panelDropped true
addUserKnob {18 RED}
RED {0 0 1}
addUserKnob {6 RED_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
RED_panelDropped true
addUserKnob {18 Green}
Green {0 1 0}
addUserKnob {6 Green_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
Green_panelDropped true
addUserKnob {18 Blue}
Blue {0 0 1}
addUserKnob {6 Blue_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
Blue_panelDropped true
}
end_group
