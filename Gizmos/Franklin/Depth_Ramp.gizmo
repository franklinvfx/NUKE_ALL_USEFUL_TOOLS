Group {
 name Depth_Ramp
 help "Depth Ramp\n\nCreate a ramp using the render of the Depth pass and the Camera.\n"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\ninputT = nuke.exists(\"Alpha\") \n\nif knob.name() in ('matte', 'showPanel'):\n    mode = node\['matte'].value()\n    if mode == 'Depth Input':\n        if str(inputT)==\"True\":\n             n = nuke.toNode('Alpha')\n             nuke.delete(n)\n\n    elif mode == 'Alpha (New Input)':\n        if str(inputT)==\"False\":\n            nuke.message(\"Change Mode (Add New Input in Node)\")\n            i = nuke.createNode('Input', inpanel=False )\n            i\['name'].setValue('Alpha')\n            n = nuke.toNode('Switch2')\n            n.setInput(0,i)"
 tile_color 0x6d6d6dff
 selected true
 addUserKnob {20 DMR l "Depth Ramp"}
 addUserKnob {41 in l "Z Depth" t "Choose the Depth pass channel." T Shuffle_input_channel.in}
 addUserKnob {6 premult l "(Un)Premult by     -->  " t "The Depth Pass is divide by the Alpha channel before being processed, and multiplied again afterwards. This can improve the texturing of anti-aliased edges." +STARTLINE}
 premult false
 addUserKnob {4 matte l " Alpha from " t "Choose the Alpha channel.\nAlpha is usefull for a better result with clean edge (UnPremult / Premult).\n\nDepth Input: \nAutomatic pick the .a from the Input.\n\nAlpha (New Input):\nPick the .a from an other Input." -STARTLINE M {"Depth Input" "Alpha (New Input)" ""}}
 addUserKnob {26 S2 l " " T " "}
 addUserKnob {4 axe l Axe t "Choose the direction of the ramp." M {X Y Z "" "" ""}}
 axe Z
 addUserKnob {18 back l Min t Picker.}
 back {-1000 -1000 -1000}
 addUserKnob {6 back_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 front l Max t Picker.}
 front {1000 1000 1000}
 addUserKnob {6 front_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 S0 l " " T " "}
 addUserKnob {4 falloff l Falloff t "Falloff profile of the feathered edge." M {Linear Smoothstep Cubic "Inverse Cubic" "" "" "" "" ""}}
 addUserKnob {26 by1 l " " T " "}
 addUserKnob {26 FT2 l " " T "                                                                                               "}
 addUserKnob {26 FTools l " " t "FranklinVFX.com\n" -STARTLINE T "<font color=\"#1C1C1C\"> Franklin VFX - 2017"}
}
 Input {
  inputs 0
  name ZDepth
  xpos -742
  ypos -859
 }
 Dot {
  name Dot9
  xpos -708
  ypos -771
 }
set N5fdc6800 [stack 0]
push 0
 Switch {
  inputs 2
  which {{!matte}}
  name Switch2
  xpos -1001
  ypos -774
 }
 NoOp {
  name AlphaCheck
  xpos -1001
  ypos -719
  addUserKnob {20 User}
  addUserKnob {6 alpha +STARTLINE}
  alpha {{"\[python \"len(\\\[n for n in nuke.channels(nuke.thisNode().input(0)) if n.find(\\\".a\\\") != -1])>0\"]" i}}
 }
 AddChannels {
  channels rgba
  name AddAlpha
  xpos -1001
  ypos -695
 }
 Dot {
  name Dot11
  xpos -967
  ypos -613
 }
set N5f74bc00 [stack 0]
 Dot {
  name Dot12
  xpos -967
  ypos 357
 }
 Input {
  inputs 0
  name Cam
  xpos -465
  ypos -873
  number 1
 }
 Dot {
  name Dot4
  xpos -431
  ypos -343
 }
push $N5f74bc00
push $N5fdc6800
 Shuffle {
  in depth
  name Shuffle_input_channel
  xpos -742
  ypos -697
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -742
  ypos -623
 }
set N5f74b000 [stack 0]
 Unpremult {
  channels all
  name Unpremult2
  xpos -871
  ypos -536
  disable {{!AlphaCheck.alpha x63 1}}
 }
push $N5f74b000
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch9
  xpos -742
  ypos -463
 }
 DepthToPosition {
  inputs 2
  output rgba
  name DepthToPosition1
  xpos -742
  ypos -347
 }
 Multiply {
  value 100
  name Multiply2
  xpos -742
  ypos -321
 }
 Dot {
  name Dot8
  xpos -708
  ypos -211
 }
set N5f74a000 [stack 0]
 Expression {
  channel0 alpha
  expr0 clamp((b-parent.back.b)/(parent.front.b-parent.back.b),0,1)
  channel1 none
  channel2 none
  name Z
  xpos -627
  ypos -127
 }
push $N5f74a000
 Expression {
  channel0 alpha
  expr0 clamp((g-parent.back.g)/(parent.front.g-parent.back.g),0,1)
  channel1 none
  channel2 none
  name Y
  xpos -742
  ypos -127
 }
push $N5f74a000
 Expression {
  channel0 alpha
  expr0 clamp((r-parent.back.r)/(parent.front.r-parent.back.r),0,1)
  channel1 none
  channel2 none
  name X
  xpos -852
  ypos -127
 }
 Switch {
  inputs 3
  which {{parent.axe i}}
  name Switch3
  xpos -742
  ypos -29
 }
 Dot {
  name Dot3
  xpos -708
  ypos 46
 }
set N5fa6e400 [stack 0]
 Expression {
  expr3 a+(a-pow(a,2))
  name Inv_Cubic
  xpos -588
  ypos 142
 }
push $N5fa6e400
 Expression {
  expr3 pow(a,2)
  name Cubic
  xpos -688
  ypos 141
 }
push $N5fa6e400
 Expression {
  expr3 smoothstep(0,1,a)
  name Smoothstep
  xpos -793
  ypos 139
 }
push $N5fa6e400
 Expression {
  name Linear
  xpos -903
  ypos 139
 }
 Switch {
  inputs 4
  which {{parent.falloff i}}
  name Switch1
  xpos -742
  ypos 241
 }
set N56f3f200 [stack 0]
 Multiply {
  inputs 1+1
  value 0
  invert_mask true
  name Multiply3
  xpos -857
  ypos 347
  disable {{!AlphaCheck.alpha i}}
 }
push $N56f3f200
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch10
  xpos -742
  ypos 437
 }
 Clamp {
  channels alpha
  name Clamp1
  selected true
  xpos -742
  ypos 511
 }
 Output {
  name FranklinVFX
  xpos -742
  ypos 615
 }
end_group
